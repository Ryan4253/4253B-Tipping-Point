#include "main.h"
 Trajectory pathTest = {
        {0,0,0,0,0,0},
        {0.0004,0.0003,0.0351,0.0282,3.1189,2.5061},
        {0.0011,0.0009,0.0809,0.0609,5.0803,3.6242},
        {0.0024,0.0018,0.1299,0.0976,4.8932,3.6676},
        {0.0042,0.0032,0.1833,0.1336,5.4167,3.6447},
        {0.0066,0.0049,0.236,0.1708,5.2023,3.6834},
        {0.0095,0.007,0.2902,0.2072,5.4219,3.6396},
        {0.0129,0.0094,0.3432,0.2437,5.3501,3.687},
        {0.0168,0.0121,0.3959,0.2799,5.3494,3.6756},
        {0.0213,0.0153,0.4483,0.3168,5.2472,3.6922},
        {0.0264,0.0189,0.502,0.3534,5.3302,3.6296},
        {0.0319,0.0228,0.5564,0.3893,5.4417,3.5948},
        {0.038,0.027,0.6099,0.4256,5.3825,3.6467},
        {0.0446,0.0316,0.6628,0.4623,5.2968,3.6732},
        {0.0518,0.0366,0.7169,0.4985,5.3778,3.6007},
        {0.0595,0.0419,0.7716,0.5339,5.4825,3.5489},
        {0.0678,0.0476,0.825,0.5704,5.3397,3.6438},
        {0.0766,0.0537,0.8795,0.6062,5.4223,3.5662},
        {0.0859,0.0601,0.9346,0.6411,5.526,3.505},
        {0.0958,0.0669,0.9884,0.6771,5.3889,3.6024},
        {0.1062,0.074,1.0432,0.7123,5.4749,3.5197},
        {0.1172,0.0815,1.0982,0.7474,5.4952,3.5022},
        {0.1288,0.0893,1.1534,0.7822,5.5166,3.4832},
        {0.1408,0.0974,1.2093,0.8161,5.6232,3.4085},
        {0.1534,0.1059,1.2634,0.8517,5.4105,3.562},
        {0.1667,0.1149,1.3194,0.8859,5.5738,3.4044},
        {0.1804,0.124,1.3769,0.9185,5.7669,3.2682},
        {0.1947,0.1336,1.4318,0.9534,5.4914,3.4914},
        {0.2096,0.1434,1.4891,0.9861,5.7421,3.2689},
        {0.2251,0.1536,1.5454,1.0198,5.6219,3.3669},
        {0.2411,0.1641,1.6034,1.0518,5.8075,3.2068},
        {0.2577,0.175,1.6597,1.0855,5.6085,3.3638},
        {0.2749,0.1862,1.7192,1.1162,5.9508,3.0677},
        {0.2927,0.1976,1.7768,1.1485,5.7655,3.2334},
        {0.311,0.2094,1.8356,1.1798,5.8777,3.1235},
        {0.33,0.2215,1.8947,1.2106,5.9208,3.0825},
        {0.3495,0.2339,1.9543,1.2409,5.9659,3.0393},
        {0.3696,0.2466,2.0136,1.2715,5.9299,3.0597},
        {0.3904,0.2597,2.0742,1.3009,6.0535,2.9394},
        {0.4117,0.2729,2.1361,1.3291,6.1903,2.8218},
        {0.4337,0.2865,2.1969,1.3582,6.0861,2.9114},
        {0.4563,0.3004,2.2591,1.386,6.2186,2.7814},
        {0.4795,0.3145,2.3218,1.4133,6.2789,2.7235},
        {0.5033,0.3289,2.3844,1.4406,6.2564,2.7338},
        {0.5278,0.3436,2.4493,1.4658,6.4853,2.522},
        {0.553,0.3585,2.5132,1.4919,6.39,2.6055},
        {0.5788,0.3737,2.5786,1.5165,6.5399,2.4584},
        {0.6052,0.389,2.6455,1.5396,6.703,2.3106},
        {0.6323,0.4047,2.7108,1.5642,6.5234,2.4666},
        {0.6601,0.4206,2.7785,1.5866,6.765,2.2283},
        {0.6886,0.4366,2.8479,1.6072,6.9388,2.0691},
        {0.7177,0.4529,2.9164,1.6287,6.8532,2.1452},
        {0.7476,0.4694,2.9867,1.6484,7.0252,1.9757},
        {0.7781,0.4861,3.0578,1.6673,7.1173,1.8859},
        {0.8094,0.5029,3.129,1.686,7.119,1.8758},
        {0.8415,0.52,3.202,1.703,7.301,1.6966},
        {0.8743,0.5372,3.2761,1.719,7.3998,1.6003},
        {0.9078,0.5545,3.3511,1.7341,7.5,1.5024},
        {0.942,0.572,3.427,1.7481,7.601,1.4036},
        {0.977,0.5896,3.503,1.762,7.6051,1.3922},
        {1.0128,0.6073,3.581,1.774,7.7955,1.2042},
        {1.0495,0.6252,3.659,1.786,7.7967,1.1964},
        {1.0869,0.6432,3.7399,1.7952,8.0846,0.9196},
        {1.125,0.6611,3.8128,1.7993,7.2948,0.4136},
        {1.1632,0.6788,3.8208,1.7615,0.8007,-3.7781},
        {1.2013,0.696,3.8077,1.723,-1.3033,-3.8479},
        {1.2392,0.7129,3.7938,1.688,-1.3963,-3.5126},
        {1.2769,0.7294,3.7778,1.6574,-1.5945,-3.0594},
        {1.3146,0.7457,3.7647,1.6263,-1.3094,-3.0991},
        {1.3521,0.7616,3.7545,1.5949,-1.0227,-3.1487},
        {1.3896,0.7774,3.7402,1.57,-1.4322,-2.4836},
        {1.4269,0.7928,3.7327,1.5407,-0.749,-2.9334},
        {1.4641,0.8079,3.721,1.5181,-1.1696,-2.2628},
        {1.5012,0.8229,3.7121,1.4951,-0.8876,-2.3021},
        {1.5383,0.8376,3.704,1.4737,-0.8092,-2.1381},
        {1.5753,0.8522,3.6967,1.4539,-0.7326,-1.9725},
        {1.6121,0.8665,3.6912,1.4349,-0.5548,-1.9109},
        {1.649,0.8807,3.6832,1.4206,-0.7908,-1.4292},
        {1.6858,0.8948,3.6791,1.4048,-0.4095,-1.5715},
        {1.7225,0.9087,3.6747,1.3919,-0.4426,-1.2974},
        {1.7592,0.9225,3.671,1.3806,-0.3735,-1.1259},
        {1.7959,0.9362,3.6669,1.3721,-0.4092,-0.8486},
        {1.8326,0.9499,3.6645,1.3643,-0.2379,-0.7798},
        {1.8692,0.9634,3.6638,1.3572,-0.0681,-0.7101},
        {1.9058,0.977,3.6617,1.3539,-0.21,-0.3275},
        {1.9424,0.9905,3.6613,1.3514,-0.0407,-0.2568},
        {1.979,1.004,3.6616,1.3506,0.0242,-0.0817},
        {2.0157,1.0175,3.6614,1.3525,-0.013,0.1955},
        {2.0523,1.031,3.665,1.3532,0.3588,0.0646},
        {2.0889,1.0446,3.6652,1.3596,0.0148,0.648},
        {2.1256,1.0583,3.668,1.3658,0.2856,0.6176},
        {2.1623,1.072,3.6725,1.3728,0.4516,0.6933},
        {2.1991,1.0859,3.6757,1.3834,0.3173,1.0675},
        {2.2359,1.0998,3.6806,1.3948,0.4857,1.1403},
        {2.2728,1.1139,3.6861,1.408,0.5543,1.3133},
        {2.3097,1.1281,3.6924,1.4228,0.624,1.4856},
        {2.3466,1.1425,3.6993,1.4394,0.6949,1.6569},
        {2.3837,1.1571,3.706,1.4586,0.6724,1.9201},
        {2.4209,1.1719,3.7145,1.4785,0.8433,1.9924},
        {2.4581,1.1869,3.7246,1.4992,1.0119,2.0702},
        {2.4955,1.2021,3.7327,1.5243,0.8117,2.5096},
        {2.5329,1.2176,3.7453,1.5474,1.2591,2.313},
        {2.5705,1.2334,3.7551,1.5758,0.9771,2.8348},
        {2.6082,1.2494,3.7684,1.6031,1.3312,2.7305},
        {2.646,1.2657,3.7816,1.6329,1.3269,2.9822},
        {2.6839,1.2824,3.7949,1.6652,1.3294,3.2243},
        {2.722,1.2993,3.81,1.6981,1.5073,3.2953},
        {2.7603,1.3167,3.826,1.7327,1.5999,3.4527},
        {2.7987,1.3344,3.8429,1.7687,1.695,3.6086},
        {2.8373,1.3524,3.8609,1.8063,1.7924,3.7632},
        {2.8761,1.3709,3.879,1.8462,1.8137,3.9906},
        {2.9151,1.3897,3.899,1.8869,1.9969,4.0618},
        {2.9543,1.409,3.92,1.929,2.1018,4.2126},
        {2.9937,1.4287,3.9428,1.9719,2.2838,4.2926},
        {3.0333,1.4489,3.9645,2.0184,2.1716,4.6532},
        {3.0733,1.4696,3.9889,2.065,2.4339,4.6509},
        {3.1134,1.4907,4.0151,2.1123,2.619,4.7329},
        {3.1538,1.5123,4.041,2.1624,2.5965,5.0134},
        {3.1945,1.5345,4.0689,2.2133,2.7871,5.0881},
        {3.2355,1.5572,4.0974,2.2663,2.8445,5.2924},
        {3.2768,1.5803,4.1284,2.3194,3.1013,5.3108},
        {3.3183,1.6041,4.16,2.3745,3.1637,5.52},
        {3.3603,1.6284,4.1916,2.4322,3.1552,5.7643},
        {3.4025,1.6533,4.225,2.4887,3.3475,5.6525},
        {3.4451,1.6787,4.2575,2.5462,3.2508,5.7493},
        {3.488,1.7048,4.2897,2.604,3.2198,5.7802},
        {3.5312,1.7314,4.3217,2.6621,3.1933,5.8066},
        {3.5748,1.7586,4.3534,2.7204,3.1711,5.8288},
        {3.6186,1.7864,4.3849,2.7789,3.1529,5.8471},
        {3.6627,1.8148,4.4168,2.837,3.1897,5.8161},
        {3.7072,1.8437,4.4471,2.8967,3.0265,5.9681},
        {3.752,1.8733,4.4788,2.955,3.1695,5.8312},
        {3.7971,1.9034,4.5095,3.0143,3.0679,5.9275},
        {3.8425,1.9342,4.5415,3.0723,3.2058,5.8011},
        {3.8882,1.9655,4.5717,3.132,3.0231,5.9733},
        {3.9343,1.9974,4.6033,3.1904,3.1603,5.8422},
        {3.9802,2.0295,4.5867,3.2101,-1.6609,1.9607},
        {4.0253,2.0614,4.5178,3.189,-6.8943,-2.1104},
        {4.0698,2.0931,4.4442,3.1726,-7.3566,-1.6356},
        {4.1135,2.1246,4.3739,3.1529,-7.0324,-1.9718},
        {4.1565,2.1559,4.3038,3.1331,-7.0158,-1.984},
        {4.1989,2.1871,4.2349,3.112,-6.8888,-2.1063},
        {4.2406,2.218,4.1678,3.089,-6.709,-2.2928},
        {4.2816,2.2486,4.1014,3.0654,-6.6395,-2.3633},
        {4.3219,2.279,4.0357,3.0411,-6.5688,-2.4292},
        {4.3617,2.3092,3.9713,3.0156,-6.4416,-2.5572},
        {4.4007,2.3391,3.9077,2.9891,-6.3542,-2.6454},
        {4.4392,2.3687,3.845,2.9618,-6.2721,-2.7283},
        {4.477,2.398,3.783,2.9337,-6.195,-2.8063},
        {4.5142,2.4271,3.7218,2.905,-6.1225,-2.8796},
        {4.5508,2.4558,3.6611,2.8758,-6.0778,-2.9186},
        {4.5869,2.4843,3.6012,2.8456,-5.9847,-3.0123},
        {4.6223,2.5125,3.5422,2.8146,-5.9023,-3.1018},
        {4.6571,2.5403,3.4832,2.7836,-5.8942,-3.104},
        {4.6914,2.5678,3.4253,2.7515,-5.7933,-3.2122},
        {4.725,2.595,3.3672,2.7196,-5.8088,-3.1837},
        {4.7581,2.6218,3.3105,2.6863,-5.6718,-3.3348},
        {4.7907,2.6484,3.2534,2.6535,-5.7137,-3.2796},
        {4.8227,2.6746,3.1973,2.6195,-5.605,-3.3955},
        {4.8541,2.7005,3.1414,2.5854,-5.5883,-3.4126},
        {4.8849,2.726,3.0859,2.5509,-5.5503,-3.4509},
        {4.9152,2.7511,3.0308,2.516,-5.5144,-3.4871},
        {4.945,2.7759,2.976,2.4808,-5.4804,-3.5214},
        {4.9742,2.8004,2.9213,2.4455,-5.4634,-3.5311},
        {5.0029,2.8245,2.8674,2.4095,-5.3975,-3.6046},
        {5.031,2.8482,2.8135,2.3733,-5.3884,-3.6138},
        {5.0586,2.8716,2.7597,2.3371,-5.3744,-3.6202},
        {5.0857,2.8946,2.7066,2.3003,-5.3158,-3.6864},
        {5.1122,2.9172,2.6535,2.2633,-5.3092,-3.693},
        {5.1382,2.9395,2.6005,2.2263,-5.2973,-3.6968},
        {5.1637,2.9614,2.548,2.1888,-5.2452,-3.7567},
        {5.1887,2.9829,2.4956,2.1511,-5.2403,-3.7615},
        {5.2131,3.004,2.4434,2.1133,-5.2193,-3.7824},
        {5.237,3.0248,2.3915,2.0753,-5.1991,-3.8023},
        {5.2604,3.0451,2.3396,2.0373,-5.1892,-3.8031},
        {5.2833,3.0651,2.2882,1.9986,-5.1367,-3.8727},
        {5.3056,3.0847,2.2366,1.9603,-5.1657,-3.8255},
        {5.3275,3.104,2.1854,1.9214,-5.1109,-3.8886},
        {5.3488,3.1228,2.1345,1.8824,-5.1,-3.9082},
        {5.3697,3.1412,2.0834,1.8434,-5.1044,-3.894},
        {5.39,3.1593,2.0325,1.8043,-5.0815,-3.9064},
        {5.4098,3.1769,1.9823,1.7645,-5.0336,-3.9825},
        {5.4292,3.1942,1.9315,1.7253,-5.0729,-3.913},
        {5.4479,3.211,1.8815,1.6853,-5.005,-4.0099},
        {5.4663,3.2275,1.831,1.6458,-5.0395,-3.9438},
        {5.4841,3.2435,1.7813,1.6055,-4.9771,-4.0361},
        {5.5014,3.2592,1.7312,1.5656,-5.0028,-3.9882},
        {5.5182,3.2744,1.6817,1.5251,-4.9597,-4.0518},
        {5.5345,3.2893,1.6319,1.4849,-4.9713,-4.0168},
        {5.5503,3.3037,1.5827,1.4442,-4.9314,-4.0777},
        {5.5657,3.3178,1.5332,1.4036,-4.9394,-4.0449},
        {5.5805,3.3314,1.4843,1.3625,-4.9012,-4.1172},
        {5.5949,3.3446,1.4351,1.3218,-4.9148,-4.078},
        {5.6088,3.3574,1.3862,1.2806,-4.8825,-4.108},
        {5.6221,3.3698,1.3376,1.2392,-4.8667,-4.1478},
        {5.635,3.3818,1.2889,1.1979,-4.8659,-4.1203},
        {5.6474,3.3933,1.2405,1.1562,-4.8371,-4.1741},
        {5.6594,3.4045,1.1922,1.1146,-4.8341,-4.1613},
        {5.6708,3.4152,1.1441,1.0727,-4.8133,-4.1945},
        {5.6817,3.4255,1.0961,1.0308,-4.8012,-4.1892},
        {5.6922,3.4354,1.0483,0.9886,-4.7816,-4.2215},
        {5.7022,3.4448,1.0006,0.9463,-4.7711,-4.2298},
        {5.7118,3.4539,0.9531,0.9039,-4.7547,-4.2435},
        {5.7208,3.4625,0.9056,0.8613,-4.7381,-4.257},
        {5.7294,3.4707,0.8583,0.8185,-4.7212,-4.2702},
        {5.7375,3.4784,0.8113,0.7755,-4.7176,-4.3108},
        {5.7452,3.4858,0.7642,0.7326,-4.6894,-4.2749},
        {5.7524,3.4927,0.7174,0.6892,-4.6833,-4.3408},
        {5.759,3.4991,0.6707,0.646,-4.6716,-4.3289},
        {5.7653,3.5052,0.6242,0.6025,-4.6524,-4.3446},
        {5.7711,3.5108,0.5778,0.5589,-4.6368,-4.3558},
        {5.7764,3.5159,0.5316,0.5152,-4.6342,-4.3839},
        {5.7812,3.5206,0.4855,0.4715,-4.6105,-4.3746},
        {5.7856,3.5249,0.4393,0.4274,-4.5916,-4.3846},
        {5.7896,3.5287,0.3934,0.3832,-4.6129,-4.4354},
        {5.793,3.5321,0.3476,0.3392,-4.5705,-4.3966},
        {5.7961,3.5351,0.3018,0.2948,-4.5728,-4.4297},
        {5.7986,3.5376,0.2561,0.2504,-4.5649,-4.4342},
        {5.8007,3.5396,0.2104,0.2059,-4.5547,-4.4385},
        {5.8024,3.5413,0.1646,0.1612,-4.5425,-4.4387},
        {5.8036,3.5424,0.1186,0.1161,-4.5209,-4.4272},
        {5.8043,3.5432,0.0728,0.0711,-4.5937,-4.5105},
        {5.8046,3.5434,0.0252,0.0244,-4.3258,-4.2428}
    };

void on_center_button() {
	static bool pressed = false;
	pressed = !pressed;
	if (pressed) {
		pros::lcd::set_text(2, "I was pressed!");
	} else {
		pros::lcd::clear_line(2);
	}
}

void initialize(){
	pros::lcd::initialize();
    
    pros::vision_signature_s_t RED_SIG = pros::Vision::signature_from_utility(1, 5685, 8135, 6910, -1963, -1705, -1834, 4.000, 0);
    // pros::vision_signature_s_t BLUE_SIG = pros::Vision::signature_from_utility()

    vision_sensor.set_signature(1, &RED_SIG);

    pros::lcd::set_text(2, "imu calibrating..............");
    imu.calibrate();
    pros::delay(2000);
    pros::lcd::set_text(2, "imu calibrated");

    Auton::add([](){}, "Do Nothing");
    Auton::add(Auton::skills, "Skills");
    Auton::add(Auton::right, "Match");

    pros::lcd::register_btn0_cb([](){lift.tarePosition();});
    pros::lcd::register_btn1_cb([](){Auton::switchAuton();});
    pros::lcd::register_btn2_cb([](){Auton::select();});
    /*
    for(int i = 0; i < 300; i++){
        std::string message = "Selected Autonomous: " + Auton::getName();
        pros::lcd::print(0, message.c_str());
        pros::delay(10);
    }
    */
    
}

void disabled(){}

void competition_initialize(){

}

void autonomous(){
    //Auton auton = Auton();
    //auton.init();
    //auton.wingGrab();

    //std::unique_ptr<Auton> auton = std::move(std::make_unique<Auton>());
    //auton->init();
    //auton->right();
    //auton.reset();
    Auton::execute();
}

void opcontrol(){
    
    profiler->setTarget(pathTest);
    profiler->waitUntilSettled();
    

    turnToAngle(90_deg);
    pros::lcd::print(5, "DONE");

    // Creates a black background
    lv_obj_t *background;
    lv_style_t backgroundStyle;
    lv_style_copy(&backgroundStyle, &lv_style_plain);
    backgroundStyle.body.main_color = LV_COLOR_BLACK;
    backgroundStyle.body.grad_color = LV_COLOR_BLACK;
    backgroundStyle.body.radius = 0;
    backgroundStyle.text.color = LV_COLOR_WHITE;
    background = lv_obj_create(lv_scr_act(), NULL);
    lv_obj_set_free_num(background, 0);
    lv_obj_set_style(background, &backgroundStyle);
    lv_obj_set_size(background, LVGL_SCREEN_WIDTH, LVGL_SCREEN_HEIGHT);
    lv_obj_align(background, NULL, LV_ALIGN_CENTER, 0, 0);

    // Starts crab rave gif
	Gif gif("/usd/gif/niconiconii.gif", lv_scr_act());

    int liftPos = 0;
    bool clampState = false, prevClampState = false;
    bool mogoState = false, prevMogoState = false;

    leftDrive.setBrakeMode(AbstractMotor::brakeMode::coast);
    rightDrive.setBrakeMode(AbstractMotor::brakeMode::coast);

    while(true){
        double power = master.getAnalog(ControllerAnalog::leftY) * (abs(master.getAnalog(ControllerAnalog::leftY)) >= DEADBAND);
        double curvature = master.getAnalog(ControllerAnalog::rightX) * (abs(master.getAnalog(ControllerAnalog::rightX)) >= DEADBAND);
        curvatureDrive(power, curvature, power == 0);

        liftPos += LIFT_STEP * master.getDigital(ControllerDigital::L1); 
        liftPos -= LIFT_STEP * master.getDigital(ControllerDigital::L2);
        liftController->setTarget(liftPos = std::max(std::min(liftPos, MAX_LIFT_HEIGHT), 0));

        roller.moveVoltage(12000*((master.getDigital(ControllerDigital::L1) && master.getDigital(ControllerDigital::L2))-master.getDigital(ControllerDigital::A)));

        claw.set(master.getDigital(ControllerDigital::R1));
        wings.set(master.getDigital(ControllerDigital::Y));

        mogoState = master.getDigital(ControllerDigital::X);
        if(!prevMogoState && mogoState){
            mogo.toggle();
        }
        prevMogoState = mogoState;

        clampState = master.getDigital(ControllerDigital::R2);
        if(!prevClampState && clampState){
            mogoClamp.toggle();
        }
        prevClampState = clampState;

        pros::delay(10);
    }
}
