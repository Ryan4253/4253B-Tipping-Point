#include "main.h"

void initialize(){
	pros::lcd::initialize();
    master.setText(0, 0, "Current Autonomous: " + std::to_string(selectedAuton));
    pros::lcd::set_text(4, "init");

    // Initializes Controller
    // liftController->tarePosition();

    // Adds autonomous
    // auton.insert(std::make_pair(0, [](){})); // lambda ftw
    // auton.insert(std::make_pair(1, redLeft));
    // auton.insert(std::make_pair(2, redRight));
    // auton.insert(std::make_pair(3, blueLeft));
    // auton.insert(std::make_pair(4, blueRight));
    // auton.insert(std::make_pair(5, awp));
    // auton.insert(std::make_pair(6, skills));

    // // Adds path generation functions
    // path.insert(std::make_pair(0, [](){}));
    // path.insert(std::make_pair(1, genRedLeft));
    // path.insert(std::make_pair(2, genRedRight));
    // path.insert(std::make_pair(3, genBlueLeft));
    // path.insert(std::make_pair(4, genBlueRight));
    // path.insert(std::make_pair(5, genAwp));
    // path.insert(std::make_pair(6, genSkills));

    // // Generates path based on pre-selected auton
    // path[selectedAuton]();
}

void disabled(){}

void competition_initialize(){}

void autonomous(){
    lift.set_brake_mode(pros::motor_brake_mode_e::E_MOTOR_BRAKE_HOLD);
    leftDrive.setBrakeMode(AbstractMotor::brakeMode::hold);
    rightDrive.setBrakeMode(AbstractMotor::brakeMode::hold);

    std::vector<std::vector<double>> uTurnLeft = {
        {0,0},
        {0.0275,2.682},
        {0.0727,4.5529},
        {0.1195,4.6954},
        {0.1661,4.6847},
        {0.2127,4.6828},
        {0.2595,4.6653},
        {0.3061,4.6865},
        {0.3529,4.673},
        {0.3995,4.6634},
        {0.4462,4.6666},
        {0.4927,4.6603},
        {0.5393,4.6511},
        {0.5856,4.6404},
        {0.6322,4.6473},
        {0.6783,4.6218},
        {0.7246,4.6314},
        {0.7707,4.6025},
        {0.8167,4.6016},
        {0.8626,4.5903},
        {0.9084,4.5782},
        {0.954,4.5653},
        {0.9995,4.5517},
        {1.045,4.5416},
        {1.09,4.5068},
        {1.1353,4.5212},
        {1.1799,4.4718},
        {1.2248,4.4866},
        {1.2692,4.4392},
        {1.3135,4.4297},
        {1.3576,4.4077},
        {1.4014,4.3845},
        {1.4451,4.3679},
        {1.4883,4.322},
        {1.5315,4.315},
        {1.5741,4.2646},
        {1.6166,4.2459},
        {1.6588,4.2226},
        {1.7006,4.1746},
        {1.7418,4.1267},
        {1.7829,4.1112},
        {1.8236,4.0665},
        {1.8634,3.9835},
        {1.9033,3.9883},
        {1.9423,3.8945},
        {1.9809,3.8672},
        {2.0187,3.7787},
        {2.0563,3.7589},
        {2.0926,3.6287},
        {2.1289,3.6336},
        {2.1635,3.4558},
        {2.1982,3.4711},
        {2.2314,3.325},
        {2.2633,3.1891},
        {2.295,3.1726},
        {2.3248,2.9775},
        {2.3537,2.8884},
        {2.381,2.728},
        {2.407,2.5966},
        {2.431,2.4081},
        {2.4533,2.2256},
        {2.474,2.0735},
        {2.4921,1.8066},
        {2.5077,1.5655},
        {2.5213,1.3541},
        {2.5311,0.9809},
        {2.5388,0.7736},
        {2.5242,-1.4662},
        {2.4458,-7.8351},
        {2.3686,-7.7248},
        {2.2913,-7.7276},
        {2.2146,-7.6694},
        {2.1359,-7.8723},
        {2.0578,-7.8031},
        {1.9786,-7.9235},
        {1.8994,-7.9154},
        {1.8201,-7.9359},
        {1.7406,-7.9452},
        {1.6607,-7.9935},
        {1.5814,-7.9308},
        {1.5024,-7.8964},
        {1.4229,-7.9589},
        {1.3462,-7.669},
        {1.2682,-7.8009},
        {1.1926,-7.5598},
        {1.1198,-7.2746},
        {1.0482,-7.1549},
        {0.9805,-6.7795},
        {0.9153,-6.5165},
        {0.8521,-6.3199},
        {0.7923,-5.9804},
        {0.7338,-5.85},
        {0.6803,-5.3477},
        {0.6283,-5.2012},
        {0.5793,-4.9068},
        {0.534,-4.5227},
        {0.4911,-4.2882},
        {0.4523,-3.8859},
        {0.415,-3.7254},
        {0.3836,-3.1382},
        {0.354,-2.9625},
        {0.3278,-2.6167},
        {0.3052,-2.2648},
        {0.287,-1.8173},
        {0.2716,-1.5429},
        {0.2616,-0.9953},
        {0.2518,-0.9888},
        {0.2483,-0.3477},
        {0.2494,0.117},
        {0.2507,0.1223},
        {0.2602,0.9513},
        {0.2688,0.8634},
        {0.2839,1.5059},
        {0.3017,1.7791},
        {0.3249,2.3203},
        {0.348,2.3149},
        {0.3783,3.0261},
        {0.4102,3.1893},
        {0.4455,3.528},
        {0.484,3.8598},
        {0.5267,4.2678},
        {0.5717,4.4962},
        {0.6189,4.7236},
        {0.6716,5.2695},
        {0.7255,5.3919},
        {0.7823,5.6764},
        {0.8302,4.7855},
        {0.8404,1.0216},
        {0.8022,-3.8211},
        {0.6433,-15.8895},
        {0.5856,-5.7708},
        {0.5367,-4.885},
        {0.4908,-4.5921},
        {0.4488,-4.1969},
        {0.4091,-3.9763},
        {0.3725,-3.6586},
        {0.3392,-3.333},
        {0.3111,-2.8077},
        {0.2826,-2.8469},
        {0.2614,-2.1197},
        {0.2409,-2.0536},
        {0.2268,-1.4093},
        {0.2125,-1.4326},
        {0.2066,-0.5907},
        {0.1995,-0.7035},
        {0.2,0.0436},
        {0.2021,0.2193},
        {0.2071,0.4925},
        {0.2185,1.1383},
        {0.2316,1.3135},
        {0.2483,1.675},
        {0.2696,2.1221},
        {0.2925,2.296},
        {0.3216,2.9084},
        {0.3515,2.9853},
        {0.3872,3.5759},
        {0.4229,3.5657},
        {0.4658,4.2979},
        {0.5086,4.277},
        {0.556,4.7401},
        {0.6056,4.9535},
        {0.658,5.2403},
        {0.7138,5.5882},
        {0.7716,5.7811},
        {0.8327,6.108},
        {0.8956,6.2881},
        {0.9616,6.595},
        {1.0286,6.704},
        {1.0998,7.117},
        {1.1719,7.2099},
        {1.2461,7.4207},
        {1.3211,7.5079},
        {1.3987,7.7513},
        {1.4747,7.6023},
        {1.5518,7.7113},
        {1.6307,7.8819},
        {1.7072,7.6586},
        {1.7861,7.8908},
        {1.8635,7.738},
        {1.9411,7.7592},
        {2.018,7.6867},
        {2.0952,7.7233},
        {2.1711,7.5965},
        {2.2473,7.6154},
        {2.3225,7.5164},
        {2.3967,7.4224},
        {2.4709,7.4228},
        {2.5207,4.9794},
        {2.5115,-0.9188},
        {2.503,-0.8537},
        {2.4931,-0.9869},
        {2.4792,-1.3942},
        {2.4632,-1.5968},
        {2.4449,-1.8341},
        {2.4241,-2.0763},
        {2.4019,-2.2196},
        {2.3769,-2.5006},
        {2.3515,-2.5381},
        {2.3237,-2.7847},
        {2.2947,-2.8972},
        {2.2647,-2.9987},
        {2.2334,-3.1361},
        {2.2012,-3.2189},
        {2.1678,-3.3375},
        {2.1335,-3.427},
        {2.0984,-3.5096},
        {2.0628,-3.5647},
        {2.0262,-3.6549},
        {1.9888,-3.741},
        {1.9512,-3.7624},
        {1.9128,-3.837},
        {1.8741,-3.8691},
        {1.8346,-3.955},
        {1.7947,-3.9827},
        {1.7547,-4.0051},
        {1.7139,-4.0802},
        {1.6731,-4.0808},
        {1.6316,-4.1499},
        {1.5901,-4.1465},
        {1.5482,-4.1915},
        {1.506,-4.2188},
        {1.4634,-4.263},
        {1.4207,-4.2719},
        {1.3781,-4.2569},
        {1.3346,-4.3439},
        {1.2913,-4.3343},
        {1.248,-4.3337},
        {1.2043,-4.3645},
        {1.1603,-4.3986},
        {1.1164,-4.3994},
        {1.0724,-4.3941},
        {1.028,-4.439},
        {0.9838,-4.4179},
        {0.939,-4.4805},
        {0.8947,-4.4253},
        {0.8499,-4.4799},
        {0.805,-4.4959},
        {0.7605,-4.4502},
        {0.7153,-4.5241},
        {0.6705,-4.4628},
        {0.6252,-4.5366},
        {0.5801,-4.5183},
        {0.5352,-4.4768},
        {0.4897,-4.5521},
        {0.4444,-4.533},
        {0.3993,-4.5106},
        {0.3539,-4.5231},
        {0.3083,-4.5874},
        {0.2632,-4.4683},
        {0.2173,-4.6104},
        {0.1722,-4.4994},
        {0.1266,-4.5676},
        {0.0807,-4.468},
        {0.0347,-4.6901}
    }
    ;
    std::vector<std::vector<double>> uTurnRight = {
        {0,0},
        {0.0294,2.8735},
        {0.0793,5.0194},
        {0.1321,5.3051},
        {0.185,5.3152},
        {0.2379,5.317},
        {0.291,5.2861},
        {0.3444,5.3688},
        {0.3973,5.2884},
        {0.4507,5.343},
        {0.5041,5.3376},
        {0.5574,5.3425},
        {0.6109,5.3267},
        {0.6646,5.3871},
        {0.718,5.3325},
        {0.7719,5.4008},
        {0.8254,5.3503},
        {0.8794,5.3994},
        {0.9335,5.3999},
        {0.9876,5.4109},
        {1.0418,5.4228},
        {1.0961,5.4355},
        {1.1506,5.4491},
        {1.2051,5.4465},
        {1.2601,5.5071},
        {1.3149,5.4678},
        {1.3702,5.5411},
        {1.4253,5.5034},
        {1.4809,5.5625},
        {1.5366,5.5721},
        {1.5925,5.5941},
        {1.6487,5.6175},
        {1.7049,5.6253},
        {1.7618,5.681},
        {1.8186,5.6796},
        {1.876,5.7393},
        {1.9336,5.7583},
        {1.9913,5.774},
        {2.0496,5.8229},
        {2.1083,5.8792},
        {2.1672,5.8877},
        {2.2265,5.9263},
        {2.2867,6.0245},
        {2.3468,6.0066},
        {2.4078,6.1084},
        {2.4692,6.1302},
        {2.5314,6.2263},
        {2.5938,6.2347},
        {2.6575,6.3787},
        {2.7211,6.3572},
        {2.7866,6.5541},
        {2.8518,6.5229},
        {2.9186,6.6711},
        {2.9867,6.8196},
        {3.055,6.8218},
        {3.1252,7.0242},
        {3.1963,7.1102},
        {3.269,7.2728},
        {3.3431,7.4016},
        {3.419,7.5925},
        {3.4968,7.7774},
        {3.576,7.923},
        {3.6579,8.1927},
        {3.7423,8.4367},
        {3.8287,8.6425},
        {3.9189,9.0231},
        {4.0112,9.2213},
        {4.0858,7.4646},
        {4.0777,-0.8157},
        {4.0549,-2.2748},
        {4.0322,-2.2758},
        {4.0089,-2.3256},
        {3.9876,-2.1303},
        {3.9656,-2.1948},
        {3.9449,-2.0779},
        {3.924,-2.0851},
        {3.9034,-2.0635},
        {3.8828,-2.053},
        {3.8628,-2.0077},
        {3.8421,-2.0688},
        {3.8211,-2.1014},
        {3.8006,-2.0459},
        {3.7774,-2.3249},
        {3.7554,-2.1995},
        {3.7318,-2.3571},
        {3.7092,-2.2577},
        {3.6899,-1.9324},
        {3.6713,-1.859},
        {3.6545,-1.6778},
        {3.6401,-1.4383},
        {3.6267,-1.3418},
        {3.6163,-1.0468},
        {3.6051,-1.1173},
        {3.5967,-0.8415},
        {3.5895,-0.7165},
        {3.5827,-0.6811},
        {3.5777,-0.5011},
        {3.5728,-0.4889},
        {3.5704,-0.2413},
        {3.5662,-0.4167},
        {3.5644,-0.1857},
        {3.5631,-0.1266},
        {3.5623,-0.075},
        {3.5611,-0.1198},
        {3.5612,0.0067},
        {3.5598,-0.1408},
        {3.5623,0.2519},
        {3.5624,0.0075},
        {3.5618,-0.0602},
        {3.5651,0.3337},
        {3.5641,-0.1012},
        {3.568,0.388},
        {3.5694,0.142},
        {3.5721,0.2687},
        {3.5733,0.1249},
        {3.5787,0.5358},
        {3.5809,0.223},
        {3.5856,0.4641},
        {3.5909,0.5307},
        {3.5969,0.6057},
        {3.603,0.6032},
        {3.6108,0.7848},
        {3.6205,0.9722},
        {3.6289,0.8328},
        {3.6401,1.1258},
        {3.6527,1.2588},
        {3.6459,-0.6805},
        {3.5491,-9.6781},
        {3.497,-5.2098},
        {3.5914,9.4335},
        {3.5895,-0.1897},
        {3.5828,-0.672},
        {3.5771,-0.5624},
        {3.5716,-0.5539},
        {3.5679,-0.3748},
        {3.5649,-0.2942},
        {3.5627,-0.2226},
        {3.5592,-0.3487},
        {3.56,0.0832},
        {3.5575,-0.2487},
        {3.5583,0.0778},
        {3.5566,-0.1746},
        {3.559,0.2397},
        {3.5568,-0.2145},
        {3.5597,0.2893},
        {3.559,-0.0728},
        {3.5604,0.1405},
        {3.563,0.2559},
        {3.5629,-0.0048},
        {3.565,0.2105},
        {3.5674,0.2388},
        {3.5692,0.1811},
        {3.5732,0.4012},
        {3.575,0.1776},
        {3.58,0.4968},
        {3.5829,0.296},
        {3.59,0.7065},
        {3.5936,0.3625},
        {3.6014,0.7833},
        {3.6086,0.7151},
        {3.6176,0.9006},
        {3.6277,1.0136},
        {3.6384,1.0631},
        {3.6511,1.2719},
        {3.6645,1.344},
        {3.6802,1.5675},
        {3.6968,1.6613},
        {3.7164,1.962},
        {3.7359,1.9469},
        {3.7585,2.2611},
        {3.7829,2.4338},
        {3.8078,2.494},
        {3.8302,2.2418},
        {3.8542,2.3984},
        {3.8771,2.2923},
        {3.8982,2.1117},
        {3.9217,2.347},
        {3.9428,2.1052},
        {3.9654,2.2617},
        {3.9878,2.2399},
        {4.0109,2.3161},
        {4.0337,2.275},
        {4.0577,2.4057},
        {4.0816,2.3827},
        {4.1064,2.4818},
        {4.1322,2.58},
        {4.1579,2.5759},
        {4.1557,-0.2221},
        {4.0725,-8.3167},
        {3.9811,-9.1506},
        {3.8909,-9.0082},
        {3.8048,-8.6079},
        {3.7208,-8.404},
        {3.6392,-8.1649},
        {3.5599,-7.9252},
        {3.4821,-7.7751},
        {3.4071,-7.5056},
        {3.3325,-7.4561},
        {3.2603,-7.2161},
        {3.1893,-7.1057},
        {3.1193,-7.001},
        {3.0507,-6.8653},
        {2.9829,-6.7788},
        {2.9163,-6.6615},
        {2.8505,-6.5733},
        {2.7856,-6.492},
        {2.7213,-6.4323},
        {2.6578,-6.3431},
        {2.5952,-6.264},
        {2.5328,-6.2375},
        {2.4712,-6.1637},
        {2.4099,-6.1258},
        {2.3494,-6.047},
        {2.2893,-6.02},
        {2.2293,-5.9912},
        {2.1701,-5.9236},
        {2.1109,-5.9161},
        {2.0524,-5.8547},
        {1.9939,-5.8508},
        {1.9358,-5.8057},
        {1.878,-5.7783},
        {1.8206,-5.7423},
        {1.7633,-5.7338},
        {1.7059,-5.7311},
        {1.6493,-5.6614},
        {1.5927,-5.6712},
        {1.5361,-5.662},
        {1.4797,-5.6304},
        {1.4236,-5.6059},
        {1.3676,-5.6051},
        {1.3116,-5.5987},
        {1.256,-5.5644},
        {1.2002,-5.5725},
        {1.1449,-5.5343},
        {1.0892,-5.563},
        {1.034,-5.5203},
        {0.9789,-5.519},
        {0.9235,-5.5333},
        {0.8687,-5.4903},
        {0.8133,-5.5159},
        {0.7586,-5.4765},
        {0.7038,-5.4967},
        {0.6487,-5.4934},
        {0.594,-5.4601},
        {0.5393,-5.4817},
        {0.4846,-5.4757},
        {0.4297,-5.4562},
        {0.3754,-5.4653},
        {0.3204,-5.4619},
        {0.2661,-5.4542},
        {0.2113,-5.4605},
        {0.1568,-5.4529},
        {0.1014,-5.3977},
        {0.047,-5.546}
    } // auton[selectedAuton]();
    ;

    std::vector<std::vector<double>> pathLeft = {
        {0,0},
        {0.0349,3.2917},
        {0.0939,6.1498},
        {0.1567,6.2583},
        {0.2224,6.7085},
        {0.2861,6.3852},
        {0.3518,6.5222},
        {0.418,6.6153},
        {0.4835,6.5629},
        {0.5488,6.5666},
        {0.6138,6.5001},
        {0.6796,6.5653},
        {0.7459,6.644},
        {0.8112,6.5286},
        {0.8772,6.5922},
        {0.9433,6.6013},
        {1.0099,6.6748},
        {1.075,6.4983},
        {1.1422,6.7426},
        {1.2074,6.5125},
        {1.2738,6.627},
        {1.3412,6.7556},
        {1.406,6.4633},
        {1.4734,6.7478},
        {1.5397,6.6369},
        {1.6048,6.5102},
        {1.6716,6.6691},
        {1.7381,6.6624},
        {1.8029,6.4732},
        {1.869,6.6174},
        {1.9339,6.4793},
        {1.9994,6.5576},
        {2.064,6.4659},
        {2.1272,6.3077},
        {2.1919,6.4719},
        {2.2549,6.3076},
        {2.3162,6.13},
        {2.3788,6.2644},
        {2.4391,6.0236},
        {2.4989,5.9799},
        {2.5577,5.8764},
        {2.6158,5.8144},
        {2.6713,5.5438},
        {2.7278,5.6559},
        {2.7801,5.2296},
        {2.8337,5.3618},
        {2.8834,4.9764},
        {2.9329,4.9475},
        {2.9803,4.7337},
        {3.0263,4.6003},
        {3.0697,4.3381},
        {3.112,4.2354},
        {3.1521,4.011},
        {3.1907,3.8618},
        {3.2271,3.6399},
        {3.2614,3.4244},
        {3.2951,3.3742},
        {3.3255,3.0413},
        {3.3552,2.9643},
        {3.3832,2.7999},
        {3.4094,2.6192},
        {3.4343,2.4991},
        {3.4576,2.3204},
        {3.4802,2.261},
        {3.5012,2.1078},
        {3.5214,2.0105},
        {3.5408,1.9397},
        {3.5593,1.8513},
        {3.5773,1.8029},
        {3.5947,1.744},
        {3.6118,1.7112},
        {3.6289,1.7018},
        {3.6456,1.6709},
        {3.6625,1.6942},
        {3.6795,1.6964},
        {3.6967,1.7259},
        {3.7144,1.7632},
        {3.7324,1.8079},
        {3.7511,1.8684},
        {3.7705,1.9361},
        {3.7905,2.0041},
        {3.787,-0.3517},
        {3.7616,-2.5371},
        {3.7382,-2.3475},
        {3.7167,-2.1511},
        {3.697,-1.9658},
        {3.6787,-1.8343},
        {3.6622,-1.6464},
        {3.6471,-1.5132},
        {3.6331,-1.3916},
        {3.621,-1.2185},
        {3.6099,-1.1085},
        {3.6,-0.9869},
        {3.5913,-0.8718},
        {3.5834,-0.7865},
        {3.5773,-0.6145},
        {3.5714,-0.5868},
        {3.5667,-0.4735},
        {3.563,-0.3632},
        {3.5597,-0.3335},
        {3.5576,-0.2089},
        {3.5557,-0.1912},
        {3.5552,-0.0483},
        {3.5543,-0.0942},
        {3.5547,0.0401},
        {3.5553,0.0645},
        {3.5564,0.1112},
        {3.5583,0.1818},
        {3.5599,0.1659},
        {3.5625,0.2572},
        {3.5648,0.234},
        {3.5514,-1.3451},
        {3.5087,-4.2659},
        {3.467,-4.1758},
        {3.4262,-4.078},
        {3.3848,-4.1317},
        {3.3432,-4.1643},
        {3.3028,-4.0424},
        {3.2608,-4.1968},
        {3.2197,-4.1147},
        {3.1785,-4.1193},
        {3.1369,-4.1575},
        {3.0952,-4.1685},
        {3.0534,-4.1805},
        {3.0118,-4.1608},
        {2.9698,-4.2024},
        {2.9276,-4.2163},
        {2.8856,-4.1978},
        {2.8429,-4.2732},
        {2.8009,-4.1944},
        {2.7579,-4.2977},
        {2.7151,-4.2848},
        {2.6724,-4.2668},
        {2.6291,-4.3424},
        {2.5864,-4.2633},
        {2.5428,-4.3659},
        {2.4995,-4.3196},
        {2.4556,-4.3942},
        {2.4122,-4.3476},
        {2.3683,-4.3884},
        {2.3245,-4.3683},
        {2.2798,-4.4755},
        {2.2362,-4.3671},
        {2.1918,-4.4333},
        {2.147,-4.4793},
        {2.1028,-4.4306},
        {2.0583,-4.4348},
        {2.013,-4.5408},
        {1.9686,-4.4301},
        {1.9234,-4.5279},
        {1.8785,-4.4773},
        {1.8331,-4.5483},
        {1.7881,-4.4969},
        {1.7425,-4.5679},
        {1.6977,-4.48},
        {1.6518,-4.5758},
        {1.606,-4.5949},
        {1.561,-4.5049},
        {1.5152,-4.5639},
        {1.4688,-4.6452},
        {1.4235,-4.5274},
        {1.3774,-4.6233},
        {1.3317,-4.5667},
        {1.2856,-4.5983},
        {1.2393,-4.6436},
        {1.1934,-4.5854},
        {1.1472,-4.6163},
        {1.1009,-4.6216},
        {1.0545,-4.6267},
        {1.008,-4.6747},
        {0.9621,-4.5696},
        {0.9153,-4.6663},
        {0.8687,-4.6922},
        {0.8229,-4.5809},
        {0.7761,-4.6804},
        {0.7297,-4.6107},
        {0.6825,-4.7386},
        {0.6365,-4.5916},
        {0.5896,-4.6963},
        {0.5431,-4.6185},
        {0.4959,-4.7013},
        {0.4492,-4.683},
        {0.4027,-4.6911},
        {0.3565,-4.6233},
        {0.3095,-4.6395},
        {0.2621,-4.7192},
        {0.2154,-4.7123},
        {0.1688,-4.6022},
        {0.1218,-4.7615},
        {0.0747,-4.5353},
        {0.0244,-4.5415}
    }
    ;
    std::vector<std::vector<double>> pathRight = {
        {0,0},
        {0.0247,2.3334},
        {0.0601,3.6907},
        {0.0954,3.518},
        {0.1289,3.4124},
        {0.164,3.5237},
        {0.1986,3.4343},
        {0.2328,3.4116},
        {0.2672,3.4558},
        {0.3015,3.4478},
        {0.3363,3.4769},
        {0.3706,3.42},
        {0.4043,3.376},
        {0.4389,3.462},
        {0.473,3.4023},
        {0.507,3.3963},
        {0.5404,3.3467},
        {0.5752,3.4807},
        {0.6079,3.2801},
        {0.6427,3.4721},
        {0.6764,3.3618},
        {0.709,3.2691},
        {0.7442,3.5132},
        {0.7768,3.2629},
        {0.8105,3.374},
        {0.8453,3.4738},
        {0.8786,3.3311},
        {0.9121,3.3516},
        {0.9472,3.5166},
        {0.9811,3.3861},
        {1.0162,3.5138},
        {1.0507,3.4478},
        {1.0861,3.5398},
        {1.1229,3.6782},
        {1.1583,3.5352},
        {1.1952,3.6994},
        {1.2338,3.8586},
        {1.2712,3.743},
        {1.311,3.9746},
        {1.3512,4.0185},
        {1.3924,4.1219},
        {1.4343,4.1915},
        {1.4788,4.4459},
        {1.5223,4.3564},
        {1.5699,4.7591},
        {1.6164,4.6481},
        {1.6666,5.0179},
        {1.7171,5.0528},
        {1.7698,5.2653},
        {1.8238,5.4038},
        {1.8804,5.6578},
        {1.938,5.7654},
        {1.9979,5.988},
        {2.0593,6.1415},
        {2.1229,6.3613},
        {2.1887,6.5688},
        {2.2549,6.6346},
        {2.3245,6.9536},
        {2.3948,7.0342},
        {2.4669,7.202},
        {2.5407,7.3804},
        {2.6157,7.5036},
        {2.6925,7.6746},
        {2.7699,7.7423},
        {2.8488,7.8931},
        {2.9287,7.9881},
        {3.0093,8.0617},
        {3.0908,8.1478},
        {3.1728,8.1989},
        {3.2553,8.2555},
        {3.3382,8.2861},
        {3.4212,8.3032},
        {3.5045,8.3219},
        {3.5876,8.3112},
        {3.6706,8.3019},
        {3.7533,8.2751},
        {3.8357,8.2357},
        {3.9176,8.1937},
        {3.9989,8.1311},
        {4.0796,8.0614},
        {4.1595,7.9962},
        {4.213,5.3479},
        {4.2384,2.537},
        {4.2618,2.3474},
        {4.2833,2.151},
        {4.303,1.9657},
        {4.3213,1.8342},
        {4.3378,1.6463},
        {4.3529,1.5131},
        {4.3668,1.3915},
        {4.379,1.2184},
        {4.3901,1.1084},
        {4.4,0.9869},
        {4.4087,0.8717},
        {4.4166,0.7864},
        {4.4227,0.6145},
        {4.4286,0.5868},
        {4.4333,0.4735},
        {4.4369,0.3632},
        {4.4403,0.3335},
        {4.4424,0.2089},
        {4.4443,0.1912},
        {4.4448,0.0483},
        {4.4457,0.0942},
        {4.4453,-0.0401},
        {4.4447,-0.0645},
        {4.4435,-0.1112},
        {4.4417,-0.1818},
        {4.4401,-0.1659},
        {4.4375,-0.2572},
        {4.4352,-0.2339},
        {4.4132,-2.1944},
        {4.3571,-5.6063},
        {4.2988,-5.8311},
        {4.2396,-5.9179},
        {4.1809,-5.8666},
        {4.1226,-5.8442},
        {4.063,-5.9465},
        {4.005,-5.8098},
        {3.9461,-5.8869},
        {3.8873,-5.8769},
        {3.8289,-5.8411},
        {3.7706,-5.8326},
        {3.7123,-5.8233},
        {3.654,-5.8369},
        {3.596,-5.7976},
        {3.5381,-5.7863},
        {3.4801,-5.7977},
        {3.4229,-5.7344},
        {3.3648,-5.7959},
        {3.3078,-5.7046},
        {3.2506,-5.7201},
        {3.1933,-5.7299},
        {3.1367,-5.6676},
        {3.0794,-5.7268},
        {3.023,-5.6374},
        {2.9662,-5.6743},
        {2.9101,-5.6137},
        {2.8536,-5.6505},
        {2.7975,-5.6117},
        {2.7412,-5.6207},
        {2.6859,-5.5422},
        {2.6296,-5.626},
        {2.5739,-5.5612},
        {2.5187,-5.5317},
        {2.463,-5.5682},
        {2.4074,-5.5504},
        {2.3527,-5.4772},
        {2.2971,-5.5583},
        {2.2423,-5.4785},
        {2.1871,-5.5142},
        {2.1325,-5.4624},
        {2.0775,-5.4981},
        {2.0232,-5.4478},
        {1.9681,-5.4995},
        {1.9138,-5.4239},
        {1.8597,-5.4279},
        {1.8049,-5.4784},
        {1.7505,-5.4195},
        {1.6967,-5.385},
        {1.6421,-5.4595},
        {1.5883,-5.3891},
        {1.5341,-5.4227},
        {1.4801,-5.3916},
        {1.4264,-5.3752},
        {1.3723,-5.4081},
        {1.3185,-5.3781},
        {1.2647,-5.3738},
        {1.2108,-5.3698},
        {1.1575,-5.3585},
        {1.1033,-5.3959},
        {1.0499,-5.3346},
        {0.9967,-5.3525},
        {0.9428,-5.3851},
        {0.8895,-5.3277},
        {0.8356,-5.351},
        {0.7827,-5.3238},
        {0.7289,-5.3711},
        {0.6757,-5.3215},
        {0.622,-5.3378},
        {0.5686,-5.3183},
        {0.5152,-5.3451},
        {0.4623,-5.3496},
        {0.409,-5.3287},
        {0.3554,-5.2918},
        {0.3019,-5.3209},
        {0.2488,-5.3602},
        {0.1952,-5.2974},
        {0.1422,-5.3568},
        {0.088,-5.2261},
        {0.031,-5.1407}
    }
    ;

    std::vector<std::vector<double>> pathLeftR = {
        {0},
        {-0.0271},
        {-0.0674},
        {-0.1079},
        {-0.1493},
        {-0.19},
        {-0.2307},
        {-0.272},
        {-0.3126},
        {-0.3529},
        {-0.3939},
        {-0.4339},
        {-0.474},
        {-0.5141},
        {-0.5533},
        {-0.5933},
        {-0.6316},
        {-0.6709},
        {-0.7089},
        {-0.7471},
        {-0.7845},
        {-0.8214},
        {-0.8582},
        {-0.8941},
        {-0.9293},
        {-0.9643},
        {-0.9978},
        {-1.032},
        {-1.0635},
        {-1.0953},
        {-1.1265},
        {-1.1555},
        {-1.1842},
        {-1.2117},
        {-1.2375},
        {-1.2627},
        {-1.2852},
        {-1.3075},
        {-1.3276},
        {-1.3455},
        {-1.362},
        {-1.3769},
        {-1.3893},
        {-1.3991},
        {-1.4076},
        {-1.4138},
        {-1.4162},
        {-1.419},
        {-1.4176},
        {-1.4147},
        {-1.4113},
        {-1.4051},
        {-1.3982},
        {-1.349},
        {-1.2993},
        {-1.2634},
        {-1.2351},
        {-1.2143},
        {-1.2034},
        {-1.2022},
        {-1.2112},
        {-1.2326},
        {-1.2688},
        {-1.3206},
        {-1.39},
        {-1.4706},
        {-1.5667},
        {-1.6773},
        {-1.8045},
        {-1.948},
        {-2.1085},
        {-2.2842},
        {-2.4751},
        {-2.6794},
        {-2.8954},
        {-3.1208},
        {-3.3336},
        {-3.469},
        {-3.5816},
        {-3.677},
        {-3.7552},
        {-3.8146},
        {-3.8566},
        {-3.8805},
        {-3.8876},
        {-3.8796},
        {-3.8608},
        {-3.8441},
        {-3.8326},
        {-3.8283},
        {-3.8265},
        {-3.8292},
        {-3.8357},
        {-3.8446},
        {-3.8575},
        {-3.8722},
        {-3.8912},
        {-3.9121},
        {-3.9363},
        {-3.9636},
        {-3.9931},
        {-4.0246},
        {-4.0523},
        {-4.0791},
        {-4.104},
        {-4.1282},
        {-4.1516},
        {-4.1735},
        {-4.1956},
        {-4.2185},
        {-4.2397},
        {-4.2625},
        {-4.2853},
        {-4.3086},
        {-4.3337},
        {-4.4367},
        {-4.4901},
        {-4.4825},
        {-4.4734},
        {-4.4623},
        {-4.4493},
        {-4.4355},
        {-4.4197},
        {-4.4038},
        {-4.3869},
        {-4.3687},
        {-4.3513},
        {-4.3319},
        {-4.3136},
        {-4.2948},
        {-4.2756},
        {-4.2569},
        {-4.2383},
        {-4.2192},
        {-4.2014},
        {-4.1835},
        {-4.1654},
        {-4.1487},
        {-4.1318},
        {-4.1161},
        {-4.0993},
        {-4.0851},
        {-4.0703},
        {-4.0561},
        {-4.0433},
        {-4.0298},
        {-4.0182},
        {-4.0065},
        {-3.9958},
        {-3.9853},
        {-3.9763},
        {-3.9671},
        {-3.9591},
        {-3.9512},
        {-3.9444},
        {-3.9383},
        {-3.9329},
        {-3.9276},
        {-3.9234},
        {-3.9199},
        {-3.9166},
        {-3.915},
        {-3.9129},
        {-3.9115},
        {-3.9124},
        {-3.9113},
        {-3.9135},
        {-3.9142},
        {-3.9172},
        {-3.9204},
        {-3.9237},
        {-3.9283},
        {-3.9335},
        {-3.939},
        {-3.937},
        {-3.8773},
        {-3.7996},
        {-3.7219},
        {-3.6414},
        {-3.5631},
        {-3.4837},
        {-3.4057},
        {-3.3269},
        {-3.2484},
        {-3.1707},
        {-3.0935},
        {-3.0167},
        {-2.9398},
        {-2.864},
        {-2.7881},
        {-2.7138},
        {-2.6384},
        {-2.5651},
        {-2.4918},
        {-2.418},
        {-2.3469},
        {-2.2736},
        {-2.2034},
        {-2.1322},
        {-2.0614},
        {-1.9922},
        {-1.9224},
        {-1.8535},
        {-1.7845},
        {-1.717},
        {-1.6488},
        {-1.5821},
        {-1.5142},
        {-1.4481},
        {-1.3819},
        {-1.3156},
        {-1.2499},
        {-1.1845},
        {-1.1194},
        {-1.0546},
        {-0.99},
        {-0.9251},
        {-0.8614},
        {-0.797},
        {-0.7338},
        {-0.6698},
        {-0.6057},
        {-0.5431},
        {-0.4795},
        {-0.4164},
        {-0.3536},
        {-0.2898},
        {-0.228},
        {-0.1642},
        {-0.1014},
        {-0.0381}
    }
    ;
    std::vector<std::vector<double>> pathRightR = {
        {0},
        {-0.0331},
        {-0.0867},
        {-0.1437},
        {-0.2017},
        {-0.2615},
        {-0.32},
        {-0.3783},
        {-0.4381},
        {-0.4977},
        {-0.5564},
        {-0.6166},
        {-0.6764},
        {-0.7362},
        {-0.7969},
        {-0.8569},
        {-0.9186},
        {-0.9792},
        {-1.0413},
        {-1.1031},
        {-1.1657},
        {-1.2287},
        {-1.2919},
        {-1.3561},
        {-1.4209},
        {-1.4859},
        {-1.5524},
        {-1.6181},
        {-1.6867},
        {-1.7548},
        {-1.8236},
        {-1.8946},
        {-1.9659},
        {-2.0384},
        {-2.1126},
        {-2.1873},
        {-2.2649},
        {-2.3426},
        {-2.4225},
        {-2.5046},
        {-2.5881},
        {-2.6731},
        {-2.7607},
        {-2.851},
        {-2.9424},
        {-3.0362},
        {-3.1338},
        {-3.231},
        {-3.3325},
        {-3.4353},
        {-3.5387},
        {-3.645},
        {-3.7478},
        {-3.7829},
        {-3.7756},
        {-3.7646},
        {-3.7567},
        {-3.7525},
        {-3.7505},
        {-3.752},
        {-3.7582},
        {-3.7684},
        {-3.7831},
        {-3.8047},
        {-3.8307},
        {-3.85},
        {-3.8539},
        {-3.8434},
        {-3.8162},
        {-3.7727},
        {-3.7121},
        {-3.6365},
        {-3.5456},
        {-3.4413},
        {-3.3253},
        {-3.1998},
        {-3.0496},
        {-2.8293},
        {-2.6167},
        {-2.4213},
        {-2.2431},
        {-2.0836},
        {-1.9417},
        {-1.8178},
        {-1.7107},
        {-1.6186},
        {-1.5432},
        {-1.4894},
        {-1.4536},
        {-1.4302},
        {-1.4212},
        {-1.4225},
        {-1.4333},
        {-1.4538},
        {-1.4815},
        {-1.5179},
        {-1.5597},
        {-1.6092},
        {-1.6643},
        {-1.7253},
        {-1.7921},
        {-1.8606},
        {-1.9329},
        {-2.006},
        {-2.0812},
        {-2.157},
        {-2.2336},
        {-2.3117},
        {-2.3896},
        {-2.4667},
        {-2.5455},
        {-2.6227},
        {-2.6999},
        {-2.7766},
        {-2.8515},
        {-2.8104},
        {-2.7464},
        {-2.7356},
        {-2.7208},
        {-2.7031},
        {-2.6829},
        {-2.6597},
        {-2.6351},
        {-2.6079},
        {-2.5794},
        {-2.5501},
        {-2.5184},
        {-2.4874},
        {-2.4544},
        {-2.4211},
        {-2.3877},
        {-2.3537},
        {-2.3196},
        {-2.2861},
        {-2.2517},
        {-2.2178},
        {-2.1851},
        {-2.1515},
        {-2.1193},
        {-2.0868},
        {-2.0565},
        {-2.025},
        {-1.9954},
        {-1.9667},
        {-1.9381},
        {-1.9118},
        {-1.8851},
        {-1.8604},
        {-1.8363},
        {-1.8139},
        {-1.7917},
        {-1.7717},
        {-1.7526},
        {-1.7352},
        {-1.7187},
        {-1.7035},
        {-1.6898},
        {-1.678},
        {-1.6671},
        {-1.6578},
        {-1.6504},
        {-1.6436},
        {-1.6393},
        {-1.6366},
        {-1.6338},
        {-1.6354},
        {-1.6358},
        {-1.64},
        {-1.6442},
        {-1.6505},
        {-1.6591},
        {-1.6686},
        {-1.6798},
        {-1.6932},
        {-1.7007},
        {-1.6753},
        {-1.6529},
        {-1.6306},
        {-1.6112},
        {-1.5895},
        {-1.5688},
        {-1.5468},
        {-1.5257},
        {-1.5043},
        {-1.4819},
        {-1.4591},
        {-1.4359},
        {-1.4128},
        {-1.3886},
        {-1.3645},
        {-1.3388},
        {-1.3142},
        {-1.2874},
        {-1.2607},
        {-1.2345},
        {-1.2057},
        {-1.179},
        {-1.1491},
        {-1.1204},
        {-1.0911},
        {-1.0604},
        {-1.0302},
        {-0.9991},
        {-0.968},
        {-0.9355},
        {-0.9036},
        {-0.8704},
        {-0.8383},
        {-0.8043},
        {-0.7706},
        {-0.737},
        {-0.7026},
        {-0.6679},
        {-0.6329},
        {-0.5977},
        {-0.5622},
        {-0.5271},
        {-0.4907},
        {-0.4551},
        {-0.4184},
        {-0.3826},
        {-0.3465},
        {-0.3088},
        {-0.2725},
        {-0.2356},
        {-0.1987},
        {-0.1621},
        {-0.1239},
        {-0.0878},
        {-0.0499},
        {-0.0123}
    }
    ;

    followPath(pathLeft, pathRight);
    
    claw.set_value(true);
    pros::delay(500);

    lift.move_relative(360, 200);

    followPath(pathLeftR, pathRightR);

    pros::lcd::set_text(2, "done");
}

void opcontrol(){
    // Configures brake type for drive & lift
    leftDrive.setBrakeMode(AbstractMotor::brakeMode::coast);
    rightDrive.setBrakeMode(AbstractMotor::brakeMode::coast);
    lift.set_brake_mode(pros::motor_brake_mode_e::E_MOTOR_BRAKE_BRAKE);

    // Initializes driver control variable
    double liftPosition = 0.0;
    bool mogoState = false, prevBtnState = false, currentBtnState = false;
    
    // Initializes logo on the brain screen
    // Gif gif("/usd/logo.gif", lv_scr_act()); // TODO - Make Gif Run in opcontrol

    while(true){
        /** 
         * @brief Chassis Control
         * Left Analog Y Stick -> Linear velocity the chassis drives in
         * Right Analog X Stick -> Curvature the chassis drives in
         */
	    double power = master.getAnalog(ControllerAnalog::leftY) * (abs(master.getAnalog(ControllerAnalog::leftY)) >= DEADBAND);
        double curvature = master.getAnalog(ControllerAnalog::rightX) * (abs(master.getAnalog(ControllerAnalog::rightX)) >= DEADBAND);
        auto speed = curvatureDrive(power, curvature, power == 0);
		(chassis->getModel())->tank(speed.first, speed.second);

        /**
         * @brief Lift Control
         * L1 (Left Top) Pressed -> Lift goes up
         * L2 (Left Bottom) Pressed -> Lift goes down
         * Both are pressed / both aren't pressed -> lift stays in the current position
         */
        // lift.moveVoltage((master.getDigital(ControllerDigital::L1) - master.getDigital(ControllerDigital::L2)) * 12000);
        if(master.getDigital(ControllerDigital::L1)) lift.move_voltage(12000);
        else if(master.getDigital(ControllerDigital::L2)) lift.move_voltage(-12000);
        else lift.move_voltage(0);

        /**
         * @brief Claw Control
         * R1 (Right Top) Pressed -> claw closes
         * R1 (Right Top) not pressed -> claw opens
         */
        claw.set_value(master.getDigital(ControllerDigital::R1));

        /**
         * @brief Mogo Holder Control
         * The solenoid toggles between the two states every time R2 (Right Bottom) is pressed
         */
        currentBtnState = master.getDigital(ControllerDigital::R2);
        if(currentBtnState && !prevBtnState){
            mogo.set_value((mogoState = !mogoState));
        }
        prevBtnState = currentBtnState;

        pros::delay(10);
    }
}