#include "main.h"

void initialize(){
	pros::lcd::initialize();
    master.setText(0, 0, "Current Autonomous: " + std::to_string(selectedAuton));
    pros::lcd::set_text(4, "init");


    // Initializes Controller
    // liftController->tarePosition();

    // Adds autonomous
    // auton.insert(std::make_pair(0, [](){})); // lambda ftw
    // auton.insert(std::make_pair(1, redLeft));
    // auton.insert(std::make_pair(2, redRight));
    // auton.insert(std::make_pair(3, blueLeft));
    // auton.insert(std::make_pair(4, blueRight));
    // auton.insert(std::make_pair(5, awp));
    // auton.insert(std::make_pair(6, skills));

    // // Adds path generation functions
    // path.insert(std::make_pair(0, [](){}));
    // path.insert(std::make_pair(1, genRedLeft));
    // path.insert(std::make_pair(2, genRedRight));
    // path.insert(std::make_pair(3, genBlueLeft));
    // path.insert(std::make_pair(4, genBlueRight));
    // path.insert(std::make_pair(5, genAwp));
    // path.insert(std::make_pair(6, genSkills));

    // // Generates path based on pre-selected auton
    // path[selectedAuton]();
}

void disabled(){}

void competition_initialize(){}

void autonomous(){
    pros::delay(5000);
    lift.set_brake_mode(pros::motor_brake_mode_e::E_MOTOR_BRAKE_HOLD);
    leftDrive.setBrakeMode(AbstractMotor::brakeMode::hold);
    rightDrive.setBrakeMode(AbstractMotor::brakeMode::hold);

    std::vector<std::vector<double>> loopbackLeft = {
        {0},
        {0.0335},
        {0.0903},
        {0.1511},
        {0.2127},
        {0.2764},
        {0.3388},
        {0.4007},
        {0.4644},
        {0.528},
        {0.5906},
        {0.6548},
        {0.7186},
        {0.7835},
        {0.8478},
        {0.913},
        {0.9784},
        {1.0455},
        {1.1108},
        {1.1791},
        {1.2462},
        {1.315},
        {1.3849},
        {1.4543},
        {1.526},
        {1.5972},
        {1.671},
        {1.745},
        {1.8202},
        {1.8973},
        {1.9754},
        {2.0552},
        {2.1377},
        {2.2205},
        {2.3059},
        {2.3941},
        {2.4842},
        {2.5763},
        {2.6725},
        {2.7711},
        {2.8731},
        {2.9785},
        {3.0867},
        {3.2014},
        {3.318},
        {3.4412},
        {3.5673},
        {3.6364},
        {3.6326},
        {3.6198},
        {3.6058},
        {3.5958},
        {3.5851},
        {3.5781},
        {3.5709},
        {3.5665},
        {3.5608},
        {3.5577},
        {3.5546},
        {3.5548},
        {3.5514},
        {3.552},
        {3.5504},
        {3.5518},
        {3.5526},
        {3.5511},
        {3.5541},
        {3.5538},
        {3.5553},
        {3.5553},
        {3.5587},
        {3.5581},
        {3.5602},
        {3.5618},
        {3.5652},
        {3.5659},
        {3.5694},
        {3.5727},
        {3.5767},
        {3.5823},
        {3.5874},
        {3.5944},
        {3.6033},
        {3.6117},
        {3.6236},
        {3.6362},
        {3.6508},
        {3.6687},
        {3.6872},
        {3.7067},
        {3.7233},
        {3.7383},
        {3.7513},
        {3.7622},
        {3.7721},
        {3.7805},
        {3.7866},
        {3.7926},
        {3.7967},
        {3.7995},
        {3.797},
        {3.7127},
        {3.5895},
        {3.4662},
        {3.3461},
        {3.2286},
        {3.1134},
        {2.9993},
        {2.8859},
        {2.7731},
        {2.6592},
        {2.8324},
        {3.6208},
        {3.6619},
        {3.6468},
        {3.6368},
        {3.6227},
        {3.6173},
        {3.6055},
        {3.6006},
        {3.5948},
        {3.588},
        {3.5859},
        {3.5807},
        {3.5782},
        {3.5763},
        {3.575},
        {3.5742},
        {3.5739},
        {3.5719},
        {3.5745},
        {3.5734},
        {3.5747},
        {3.5764},
        {3.5785},
        {3.579},
        {3.584},
        {3.5875},
        {3.5894},
        {3.594},
        {3.5993},
        {3.6053},
        {3.612},
        {3.6178},
        {3.6283},
        {3.6344},
        {3.6506},
        {3.6575},
        {3.6727},
        {3.686},
        {3.7057},
        {3.7191},
        {3.7422},
        {3.7624},
        {3.7876},
        {3.8102},
        {3.8366},
        {3.8606},
        {3.8849},
        {3.9072},
        {3.929},
        {3.9505},
        {3.9719},
        {3.9943},
        {4.0146},
        {4.0382},
        {4.058},
        {4.0813},
        {4.1049},
        {4.1262},
        {4.1526},
        {4.1743},
        {4.2009},
        {4.2265},
        {4.2279},
        {4.199},
        {4.1675},
        {4.1385},
        {4.1111},
        {4.0854},
        {4.0604},
        {4.0381},
        {4.0158},
        {3.9959},
        {3.9754},
        {3.9581},
        {3.9397},
        {3.9232},
        {3.9084},
        {3.8926},
        {3.8784},
        {3.8649},
        {3.8524},
        {3.8398},
        {3.8277},
        {3.8173},
        {3.8058},
        {3.796},
        {3.7862},
        {3.7765},
        {3.7679},
        {3.759},
        {3.7511},
        {3.7428},
        {3.7352},
        {3.7282},
        {3.7206},
        {3.7144},
        {3.7073},
        {3.7016},
        {3.6953},
        {3.6892},
        {3.6838},
        {3.6784},
        {3.6731},
        {3.6678},
        {3.6633},
        {3.6579},
        {3.6539},
        {3.6488},
        {3.6451},
        {3.6403},
        {3.6368},
        {3.6323},
        {3.6288},
        {3.6251},
        {3.6211},
        {3.618},
        {3.6143},
        {3.611},
        {3.6079},
        {3.6044},
        {3.6017},
        {3.5985},
        {3.5956},
        {3.5927},
        {3.5899},
        {3.5872},
        {3.5845},
        {3.5818},
        {3.5794},
        {3.5768},
        {3.5743},
        {3.5721},
        {3.5695},
        {3.5673},
        {3.5651},
        {3.5629},
        {3.5606},
        {3.5587},
        {3.5563},
        {3.5545},
        {3.5523},
        {3.5504},
        {3.5485},
        {3.5465},
        {3.5446},
        {3.5428},
        {3.5409},
        {3.5391},
        {3.5373},
        {3.5356},
        {3.5338},
        {3.5322},
        {3.5304},
        {3.5288},
        {3.5271},
        {3.5255},
        {3.5239},
        {3.5223},
        {3.5207},
        {3.5192},
        {3.5176},
        {3.5161},
        {3.5146},
        {3.513},
        {3.5116},
        {3.5101},
        {3.5086},
        {3.5072},
        {3.5057},
        {3.5043},
        {3.5028},
        {3.5014},
        {3.5},
        {3.4986},
        {3.4972},
        {3.4958},
        {3.4944},
        {3.493},
        {3.4916},
        {3.4902},
        {3.4888},
        {3.4875},
        {3.4861},
        {3.4847},
        {3.4833},
        {3.482},
        {3.4806},
        {3.4792},
        {3.4779},
        {3.4765},
        {3.4751},
        {3.4737},
        {3.4724},
        {3.471},
        {3.4696},
        {3.4682},
        {3.4668},
        {3.4654},
        {3.464},
        {3.4626},
        {3.4612},
        {3.4597},
        {3.4583},
        {3.4569},
        {3.4554},
        {3.4538},
        {3.4525},
        {3.451},
        {3.4495},
        {3.448},
        {3.4463},
        {3.445},
        {3.4434},
        {3.4418},
        {3.4402},
        {3.4387},
        {3.4369},
        {3.4355},
        {3.4339},
        {3.432},
        {3.4305},
        {3.4287},
        {3.427},
        {3.4254},
        {3.4235},
        {3.4219},
        {3.4198},
        {3.4184},
        {3.4161},
        {3.4145},
        {3.4125},
        {3.4107},
        {3.4086},
        {3.4068},
        {3.4046},
        {3.4025},
        {3.4006},
        {3.3985},
        {3.3962},
        {3.394},
        {3.3919},
        {3.3897},
        {3.3872},
        {3.385},
        {3.3825},
        {3.3802},
        {3.3778},
        {3.3751},
        {3.37},
        {3.3299},
        {3.2788},
        {3.2281},
        {3.1775},
        {3.127},
        {3.0768},
        {3.0259},
        {2.9759},
        {2.9258},
        {2.8752},
        {2.8255},
        {2.775},
        {2.7253},
        {2.6756},
        {2.6252},
        {2.5758},
        {2.5261},
        {2.4763},
        {2.4274},
        {2.3774},
        {2.3284},
        {2.2792},
        {2.23},
        {2.1806},
        {2.1319},
        {2.083},
        {2.0339},
        {1.9855},
        {1.9366},
        {1.8884},
        {1.8399},
        {1.7911},
        {1.7431},
        {1.6946},
        {1.6465},
        {1.5989},
        {1.5509},
        {1.5026},
        {1.4548},
        {1.4072},
        {1.36},
        {1.3122},
        {1.265},
        {1.2171},
        {1.1698},
        {1.1226},
        {1.0756},
        {1.0289},
        {0.9814},
        {0.9344},
        {0.8875},
        {0.8408},
        {0.7942},
        {0.7478},
        {0.7004},
        {0.6547},
        {0.6075},
        {0.5608},
        {0.5154},
        {0.4684},
        {0.4219},
        {0.3754},
        {0.3289},
        {0.2824},
        {0.2359},
        {0.1891},
        {0.1421},
        {0.0963},
        {0.0517}
    }
    ;
    std::vector<std::vector<double>> loopbackRight = {
        {0},
        {0.0253},
        {0.0633},
        {0.1004},
        {0.1382},
        {0.1749},
        {0.2119},
        {0.2496},
        {0.2861},
        {0.3224},
        {0.3596},
        {0.3953},
        {0.4316},
        {0.4667},
        {0.5023},
        {0.537},
        {0.5718},
        {0.6047},
        {0.6393},
        {0.671},
        {0.7039},
        {0.7352},
        {0.7653},
        {0.7959},
        {0.8242},
        {0.8529},
        {0.8791},
        {0.9051},
        {0.9298},
        {0.9527},
        {0.9746},
        {0.9949},
        {1.0124},
        {1.0296},
        {1.0442},
        {1.056},
        {1.0659},
        {1.0737},
        {1.0776},
        {1.079},
        {1.077},
        {1.0715},
        {1.0634},
        {1.0487},
        {1.0321},
        {1.0089},
        {0.9828},
        {0.9159},
        {0.8324},
        {0.7625},
        {0.6982},
        {0.6344},
        {0.5757},
        {0.5177},
        {0.4643},
        {0.4125},
        {0.3663},
        {0.3219},
        {0.2818},
        {0.2428},
        {0.2116},
        {0.1809},
        {0.1565},
        {0.1336},
        {0.1156},
        {0.1041},
        {0.0925},
        {0.0882},
        {0.0864},
        {0.0901},
        {0.0947},
        {0.1074},
        {0.1219},
        {0.1414},
        {0.1635},
        {0.1928},
        {0.2239},
        {0.2599},
        {0.2998},
        {0.343},
        {0.3914},
        {0.443},
        {0.4977},
        {0.5581},
        {0.6203},
        {0.6874},
        {0.7583},
        {0.8318},
        {0.9107},
        {0.9912},
        {1.0745},
        {1.1595},
        {1.2465},
        {1.3355},
        {1.4257},
        {1.5173},
        {1.6111},
        {1.7051},
        {1.801},
        {1.8982},
        {1.9936},
        {2.0313},
        {2.0546},
        {2.0778},
        {2.098},
        {2.1155},
        {2.1307},
        {2.1447},
        {2.1581},
        {2.171},
        {2.1849},
        {1.9161},
        {1.048},
        {0.9324},
        {0.8772},
        {0.8212},
        {0.7734},
        {0.721},
        {0.6791},
        {0.6344},
        {0.5946},
        {0.56},
        {0.5246},
        {0.4964},
        {0.4695},
        {0.446},
        {0.4259},
        {0.4092},
        {0.3961},
        {0.3885},
        {0.3804},
        {0.38},
        {0.381},
        {0.3857},
        {0.394},
        {0.4078},
        {0.4212},
        {0.4401},
        {0.4645},
        {0.4903},
        {0.5196},
        {0.5522},
        {0.5881},
        {0.6291},
        {0.6696},
        {0.7187},
        {0.762},
        {0.8187},
        {0.8714},
        {0.9305},
        {0.9874},
        {1.0551},
        {1.1177},
        {1.1875},
        {1.2569},
        {1.3331},
        {1.4067},
        {1.4828},
        {1.5585},
        {1.6361},
        {1.7143},
        {1.7927},
        {1.8714},
        {1.949},
        {2.0288},
        {2.1051},
        {2.1852},
        {2.262},
        {2.3384},
        {2.4171},
        {2.4907},
        {2.569},
        {2.6424},
        {2.7169},
        {2.7719},
        {2.8009},
        {2.8325},
        {2.8615},
        {2.8889},
        {2.9146},
        {2.9395},
        {2.9619},
        {2.9841},
        {3.0041},
        {3.0246},
        {3.0418},
        {3.0603},
        {3.0768},
        {3.0916},
        {3.1074},
        {3.1216},
        {3.1351},
        {3.1475},
        {3.1602},
        {3.1723},
        {3.1827},
        {3.1942},
        {3.204},
        {3.2138},
        {3.2235},
        {3.2321},
        {3.241},
        {3.2489},
        {3.2572},
        {3.2648},
        {3.2718},
        {3.2794},
        {3.2856},
        {3.2927},
        {3.2984},
        {3.3047},
        {3.3108},
        {3.3162},
        {3.3216},
        {3.3269},
        {3.3322},
        {3.3367},
        {3.3421},
        {3.3461},
        {3.3512},
        {3.3549},
        {3.3597},
        {3.3632},
        {3.3677},
        {3.3712},
        {3.3749},
        {3.3789},
        {3.382},
        {3.3856},
        {3.389},
        {3.3921},
        {3.3956},
        {3.3983},
        {3.4015},
        {3.4044},
        {3.4073},
        {3.4101},
        {3.4128},
        {3.4155},
        {3.4182},
        {3.4206},
        {3.4232},
        {3.4257},
        {3.4279},
        {3.4305},
        {3.4327},
        {3.4349},
        {3.4371},
        {3.4394},
        {3.4413},
        {3.4437},
        {3.4455},
        {3.4477},
        {3.4496},
        {3.4515},
        {3.4535},
        {3.4553},
        {3.4572},
        {3.4591},
        {3.4609},
        {3.4627},
        {3.4644},
        {3.4662},
        {3.4678},
        {3.4696},
        {3.4712},
        {3.4729},
        {3.4745},
        {3.4761},
        {3.4777},
        {3.4793},
        {3.4808},
        {3.4824},
        {3.4839},
        {3.4854},
        {3.487},
        {3.4884},
        {3.4899},
        {3.4914},
        {3.4928},
        {3.4943},
        {3.4957},
        {3.4972},
        {3.4986},
        {3.5},
        {3.5014},
        {3.5028},
        {3.5042},
        {3.5056},
        {3.507},
        {3.5084},
        {3.5098},
        {3.5112},
        {3.5125},
        {3.5139},
        {3.5153},
        {3.5167},
        {3.518},
        {3.5194},
        {3.5208},
        {3.5221},
        {3.5235},
        {3.5249},
        {3.5263},
        {3.5276},
        {3.529},
        {3.5304},
        {3.5318},
        {3.5332},
        {3.5346},
        {3.536},
        {3.5374},
        {3.5388},
        {3.5403},
        {3.5417},
        {3.5431},
        {3.5446},
        {3.5462},
        {3.5475},
        {3.549},
        {3.5505},
        {3.552},
        {3.5537},
        {3.555},
        {3.5566},
        {3.5582},
        {3.5598},
        {3.5613},
        {3.5631},
        {3.5645},
        {3.5661},
        {3.568},
        {3.5695},
        {3.5713},
        {3.573},
        {3.5746},
        {3.5765},
        {3.5781},
        {3.5802},
        {3.5816},
        {3.5839},
        {3.5855},
        {3.5875},
        {3.5893},
        {3.5914},
        {3.5932},
        {3.5954},
        {3.5975},
        {3.5994},
        {3.6015},
        {3.6038},
        {3.606},
        {3.6081},
        {3.6103},
        {3.6128},
        {3.6149},
        {3.6175},
        {3.6198},
        {3.6222},
        {3.6249},
        {3.6248},
        {3.5879},
        {3.539},
        {3.4897},
        {3.4403},
        {3.3908},
        {3.341},
        {3.2918},
        {3.242},
        {3.192},
        {3.1426},
        {3.0922},
        {3.0427},
        {2.9925},
        {2.9421},
        {2.8924},
        {2.8418},
        {2.7915},
        {2.7414},
        {2.6903},
        {2.6403},
        {2.5894},
        {2.5386},
        {2.4877},
        {2.437},
        {2.3858},
        {2.3346},
        {2.2837},
        {2.2322},
        {2.1812},
        {2.1295},
        {2.0779},
        {2.0265},
        {1.9745},
        {1.923},
        {1.8712},
        {1.819},
        {1.7668},
        {1.7149},
        {1.6626},
        {1.6105},
        {1.5578},
        {1.5056},
        {1.4527},
        {1.4002},
        {1.3474},
        {1.2947},
        {1.2419},
        {1.1886},
        {1.1358},
        {1.0827},
        {1.0295},
        {0.9764},
        {0.9233},
        {0.8695},
        {0.8169},
        {0.7628},
        {0.7094},
        {0.6564},
        {0.6023},
        {0.5489},
        {0.495},
        {0.4411},
        {0.3872},
        {0.3331},
        {0.2789},
        {0.2245},
        {0.1697},
        {0.1176},
        {0.0635}
    }
    ;
    
    // std::vector<std::vector<double>> pathLeft = {
    //     {0,0},
    //     {0.0349,3.2917},
    //     {0.0939,6.1498},
    //     {0.1567,6.2583},
    //     {0.2224,6.7085},
    //     {0.2861,6.3852},
    //     {0.3518,6.5222},
    //     {0.418,6.6153},
    //     {0.4835,6.5629},
    //     {0.5488,6.5666},
    //     {0.6138,6.5001},
    //     {0.6796,6.5653},
    //     {0.7459,6.644},
    //     {0.8112,6.5286},
    //     {0.8772,6.5922},
    //     {0.9433,6.6013},
    //     {1.0099,6.6748},
    //     {1.075,6.4983},
    //     {1.1422,6.7426},
    //     {1.2074,6.5125},
    //     {1.2738,6.627},
    //     {1.3412,6.7556},
    //     {1.406,6.4633},
    //     {1.4734,6.7478},
    //     {1.5397,6.6369},
    //     {1.6048,6.5102},
    //     {1.6716,6.6691},
    //     {1.7381,6.6624},
    //     {1.8029,6.4732},
    //     {1.869,6.6174},
    //     {1.9339,6.4793},
    //     {1.9994,6.5576},
    //     {2.064,6.4659},
    //     {2.1272,6.3077},
    //     {2.1919,6.4719},
    //     {2.2549,6.3076},
    //     {2.3162,6.13},
    //     {2.3788,6.2644},
    //     {2.4391,6.0236},
    //     {2.4989,5.9799},
    //     {2.5577,5.8764},
    //     {2.6158,5.8144},
    //     {2.6713,5.5438},
    //     {2.7278,5.6559},
    //     {2.7801,5.2296},
    //     {2.8337,5.3618},
    //     {2.8834,4.9764},
    //     {2.9329,4.9475},
    //     {2.9803,4.7337},
    //     {3.0263,4.6003},
    //     {3.0697,4.3381},
    //     {3.112,4.2354},
    //     {3.1521,4.011},
    //     {3.1907,3.8618},
    //     {3.2271,3.6399},
    //     {3.2614,3.4244},
    //     {3.2951,3.3742},
    //     {3.3255,3.0413},
    //     {3.3552,2.9643},
    //     {3.3832,2.7999},
    //     {3.4094,2.6192},
    //     {3.4343,2.4991},
    //     {3.4576,2.3204},
    //     {3.4802,2.261},
    //     {3.5012,2.1078},
    //     {3.5214,2.0105},
    //     {3.5408,1.9397},
    //     {3.5593,1.8513},
    //     {3.5773,1.8029},
    //     {3.5947,1.744},
    //     {3.6118,1.7112},
    //     {3.6289,1.7018},
    //     {3.6456,1.6709},
    //     {3.6625,1.6942},
    //     {3.6795,1.6964},
    //     {3.6967,1.7259},
    //     {3.7144,1.7632},
    //     {3.7324,1.8079},
    //     {3.7511,1.8684},
    //     {3.7705,1.9361},
    //     {3.7905,2.0041},
    //     {3.787,-0.3517},
    //     {3.7616,-2.5371},
    //     {3.7382,-2.3475},
    //     {3.7167,-2.1511},
    //     {3.697,-1.9658},
    //     {3.6787,-1.8343},
    //     {3.6622,-1.6464},
    //     {3.6471,-1.5132},
    //     {3.6331,-1.3916},
    //     {3.621,-1.2185},
    //     {3.6099,-1.1085},
    //     {3.6,-0.9869},
    //     {3.5913,-0.8718},
    //     {3.5834,-0.7865},
    //     {3.5773,-0.6145},
    //     {3.5714,-0.5868},
    //     {3.5667,-0.4735},
    //     {3.563,-0.3632},
    //     {3.5597,-0.3335},
    //     {3.5576,-0.2089},
    //     {3.5557,-0.1912},
    //     {3.5552,-0.0483},
    //     {3.5543,-0.0942},
    //     {3.5547,0.0401},
    //     {3.5553,0.0645},
    //     {3.5564,0.1112},
    //     {3.5583,0.1818},
    //     {3.5599,0.1659},
    //     {3.5625,0.2572},
    //     {3.5648,0.234},
    //     {3.5514,-1.3451},
    //     {3.5087,-4.2659},
    //     {3.467,-4.1758},
    //     {3.4262,-4.078},
    //     {3.3848,-4.1317},
    //     {3.3432,-4.1643},
    //     {3.3028,-4.0424},
    //     {3.2608,-4.1968},
    //     {3.2197,-4.1147},
    //     {3.1785,-4.1193},
    //     {3.1369,-4.1575},
    //     {3.0952,-4.1685},
    //     {3.0534,-4.1805},
    //     {3.0118,-4.1608},
    //     {2.9698,-4.2024},
    //     {2.9276,-4.2163},
    //     {2.8856,-4.1978},
    //     {2.8429,-4.2732},
    //     {2.8009,-4.1944},
    //     {2.7579,-4.2977},
    //     {2.7151,-4.2848},
    //     {2.6724,-4.2668},
    //     {2.6291,-4.3424},
    //     {2.5864,-4.2633},
    //     {2.5428,-4.3659},
    //     {2.4995,-4.3196},
    //     {2.4556,-4.3942},
    //     {2.4122,-4.3476},
    //     {2.3683,-4.3884},
    //     {2.3245,-4.3683},
    //     {2.2798,-4.4755},
    //     {2.2362,-4.3671},
    //     {2.1918,-4.4333},
    //     {2.147,-4.4793},
    //     {2.1028,-4.4306},
    //     {2.0583,-4.4348},
    //     {2.013,-4.5408},
    //     {1.9686,-4.4301},
    //     {1.9234,-4.5279},
    //     {1.8785,-4.4773},
    //     {1.8331,-4.5483},
    //     {1.7881,-4.4969},
    //     {1.7425,-4.5679},
    //     {1.6977,-4.48},
    //     {1.6518,-4.5758},
    //     {1.606,-4.5949},
    //     {1.561,-4.5049},
    //     {1.5152,-4.5639},
    //     {1.4688,-4.6452},
    //     {1.4235,-4.5274},
    //     {1.3774,-4.6233},
    //     {1.3317,-4.5667},
    //     {1.2856,-4.5983},
    //     {1.2393,-4.6436},
    //     {1.1934,-4.5854},
    //     {1.1472,-4.6163},
    //     {1.1009,-4.6216},
    //     {1.0545,-4.6267},
    //     {1.008,-4.6747},
    //     {0.9621,-4.5696},
    //     {0.9153,-4.6663},
    //     {0.8687,-4.6922},
    //     {0.8229,-4.5809},
    //     {0.7761,-4.6804},
    //     {0.7297,-4.6107},
    //     {0.6825,-4.7386},
    //     {0.6365,-4.5916},
    //     {0.5896,-4.6963},
    //     {0.5431,-4.6185},
    //     {0.4959,-4.7013},
    //     {0.4492,-4.683},
    //     {0.4027,-4.6911},
    //     {0.3565,-4.6233},
    //     {0.3095,-4.6395},
    //     {0.2621,-4.7192},
    //     {0.2154,-4.7123},
    //     {0.1688,-4.6022},
    //     {0.1218,-4.7615},
    //     {0.0747,-4.5353},
    //     {0.0244,-4.5415}
    // }
    // ;
    // std::vector<std::vector<double>> pathRight = {
    //     {0,0},
    //     {0.0247,2.3334},
    //     {0.0601,3.6907},
    //     {0.0954,3.518},
    //     {0.1289,3.4124},
    //     {0.164,3.5237},
    //     {0.1986,3.4343},
    //     {0.2328,3.4116},
    //     {0.2672,3.4558},
    //     {0.3015,3.4478},
    //     {0.3363,3.4769},
    //     {0.3706,3.42},
    //     {0.4043,3.376},
    //     {0.4389,3.462},
    //     {0.473,3.4023},
    //     {0.507,3.3963},
    //     {0.5404,3.3467},
    //     {0.5752,3.4807},
    //     {0.6079,3.2801},
    //     {0.6427,3.4721},
    //     {0.6764,3.3618},
    //     {0.709,3.2691},
    //     {0.7442,3.5132},
    //     {0.7768,3.2629},
    //     {0.8105,3.374},
    //     {0.8453,3.4738},
    //     {0.8786,3.3311},
    //     {0.9121,3.3516},
    //     {0.9472,3.5166},
    //     {0.9811,3.3861},
    //     {1.0162,3.5138},
    //     {1.0507,3.4478},
    //     {1.0861,3.5398},
    //     {1.1229,3.6782},
    //     {1.1583,3.5352},
    //     {1.1952,3.6994},
    //     {1.2338,3.8586},
    //     {1.2712,3.743},
    //     {1.311,3.9746},
    //     {1.3512,4.0185},
    //     {1.3924,4.1219},
    //     {1.4343,4.1915},
    //     {1.4788,4.4459},
    //     {1.5223,4.3564},
    //     {1.5699,4.7591},
    //     {1.6164,4.6481},
    //     {1.6666,5.0179},
    //     {1.7171,5.0528},
    //     {1.7698,5.2653},
    //     {1.8238,5.4038},
    //     {1.8804,5.6578},
    //     {1.938,5.7654},
    //     {1.9979,5.988},
    //     {2.0593,6.1415},
    //     {2.1229,6.3613},
    //     {2.1887,6.5688},
    //     {2.2549,6.6346},
    //     {2.3245,6.9536},
    //     {2.3948,7.0342},
    //     {2.4669,7.202},
    //     {2.5407,7.3804},
    //     {2.6157,7.5036},
    //     {2.6925,7.6746},
    //     {2.7699,7.7423},
    //     {2.8488,7.8931},
    //     {2.9287,7.9881},
    //     {3.0093,8.0617},
    //     {3.0908,8.1478},
    //     {3.1728,8.1989},
    //     {3.2553,8.2555},
    //     {3.3382,8.2861},
    //     {3.4212,8.3032},
    //     {3.5045,8.3219},
    //     {3.5876,8.3112},
    //     {3.6706,8.3019},
    //     {3.7533,8.2751},
    //     {3.8357,8.2357},
    //     {3.9176,8.1937},
    //     {3.9989,8.1311},
    //     {4.0796,8.0614},
    //     {4.1595,7.9962},
    //     {4.213,5.3479},
    //     {4.2384,2.537},
    //     {4.2618,2.3474},
    //     {4.2833,2.151},
    //     {4.303,1.9657},
    //     {4.3213,1.8342},
    //     {4.3378,1.6463},
    //     {4.3529,1.5131},
    //     {4.3668,1.3915},
    //     {4.379,1.2184},
    //     {4.3901,1.1084},
    //     {4.4,0.9869},
    //     {4.4087,0.8717},
    //     {4.4166,0.7864},
    //     {4.4227,0.6145},
    //     {4.4286,0.5868},
    //     {4.4333,0.4735},
    //     {4.4369,0.3632},
    //     {4.4403,0.3335},
    //     {4.4424,0.2089},
    //     {4.4443,0.1912},
    //     {4.4448,0.0483},
    //     {4.4457,0.0942},
    //     {4.4453,-0.0401},
    //     {4.4447,-0.0645},
    //     {4.4435,-0.1112},
    //     {4.4417,-0.1818},
    //     {4.4401,-0.1659},
    //     {4.4375,-0.2572},
    //     {4.4352,-0.2339},
    //     {4.4132,-2.1944},
    //     {4.3571,-5.6063},
    //     {4.2988,-5.8311},
    //     {4.2396,-5.9179},
    //     {4.1809,-5.8666},
    //     {4.1226,-5.8442},
    //     {4.063,-5.9465},
    //     {4.005,-5.8098},
    //     {3.9461,-5.8869},
    //     {3.8873,-5.8769},
    //     {3.8289,-5.8411},
    //     {3.7706,-5.8326},
    //     {3.7123,-5.8233},
    //     {3.654,-5.8369},
    //     {3.596,-5.7976},
    //     {3.5381,-5.7863},
    //     {3.4801,-5.7977},
    //     {3.4229,-5.7344},
    //     {3.3648,-5.7959},
    //     {3.3078,-5.7046},
    //     {3.2506,-5.7201},
    //     {3.1933,-5.7299},
    //     {3.1367,-5.6676},
    //     {3.0794,-5.7268},
    //     {3.023,-5.6374},
    //     {2.9662,-5.6743},
    //     {2.9101,-5.6137},
    //     {2.8536,-5.6505},
    //     {2.7975,-5.6117},
    //     {2.7412,-5.6207},
    //     {2.6859,-5.5422},
    //     {2.6296,-5.626},
    //     {2.5739,-5.5612},
    //     {2.5187,-5.5317},
    //     {2.463,-5.5682},
    //     {2.4074,-5.5504},
    //     {2.3527,-5.4772},
    //     {2.2971,-5.5583},
    //     {2.2423,-5.4785},
    //     {2.1871,-5.5142},
    //     {2.1325,-5.4624},
    //     {2.0775,-5.4981},
    //     {2.0232,-5.4478},
    //     {1.9681,-5.4995},
    //     {1.9138,-5.4239},
    //     {1.8597,-5.4279},
    //     {1.8049,-5.4784},
    //     {1.7505,-5.4195},
    //     {1.6967,-5.385},
    //     {1.6421,-5.4595},
    //     {1.5883,-5.3891},
    //     {1.5341,-5.4227},
    //     {1.4801,-5.3916},
    //     {1.4264,-5.3752},
    //     {1.3723,-5.4081},
    //     {1.3185,-5.3781},
    //     {1.2647,-5.3738},
    //     {1.2108,-5.3698},
    //     {1.1575,-5.3585},
    //     {1.1033,-5.3959},
    //     {1.0499,-5.3346},
    //     {0.9967,-5.3525},
    //     {0.9428,-5.3851},
    //     {0.8895,-5.3277},
    //     {0.8356,-5.351},
    //     {0.7827,-5.3238},
    //     {0.7289,-5.3711},
    //     {0.6757,-5.3215},
    //     {0.622,-5.3378},
    //     {0.5686,-5.3183},
    //     {0.5152,-5.3451},
    //     {0.4623,-5.3496},
    //     {0.409,-5.3287},
    //     {0.3554,-5.2918},
    //     {0.3019,-5.3209},
    //     {0.2488,-5.3602},
    //     {0.1952,-5.2974},
    //     {0.1422,-5.3568},
    //     {0.088,-5.2261},
    //     {0.031,-5.1407}
    // }
    // ;

    // std::vector<std::vector<double>> pathLeftR = {
    //     {0},
    //     {-0.0208},
    //     {-0.0491},
    //     {-0.0774},
    //     {-0.1037},
    //     {-0.1303},
    //     {-0.1575},
    //     {-0.1829},
    //     {-0.2095},
    //     {-0.2352},
    //     {-0.2604},
    //     {-0.2852},
    //     {-0.3087},
    //     {-0.3347},
    //     {-0.3554},
    //     {-0.3793},
    //     {-0.4009},
    //     {-0.4216},
    //     {-0.4422},
    //     {-0.4594},
    //     {-0.4796},
    //     {-0.4952},
    //     {-0.5105},
    //     {-0.5243},
    //     {-0.5384},
    //     {-0.5482},
    //     {-0.5581},
    //     {-0.5653},
    //     {-0.5715},
    //     {-0.5737},
    //     {-0.5774},
    //     {-0.5741},
    //     {-0.5722},
    //     {-0.5658},
    //     {-0.5577},
    //     {-0.5459},
    //     {-0.5324},
    //     {-0.5162},
    //     {-0.4951},
    //     {-0.4747},
    //     {-0.4508},
    //     {-0.4226},
    //     {-0.3927},
    //     {-0.3326},
    //     {-0.2895},
    //     {-0.2562},
    //     {-0.2257},
    //     {-0.1994},
    //     {-0.1786},
    //     {-0.1609},
    //     {-0.1477},
    //     {-0.1402},
    //     {-0.1373},
    //     {-0.1367},
    //     {-0.1444},
    //     {-0.1546},
    //     {-0.1709},
    //     {-0.1911},
    //     {-0.2164},
    //     {-0.2492},
    //     {-0.285},
    //     {-0.3273},
    //     {-0.3751},
    //     {-0.4286},
    //     {-0.4878},
    //     {-0.5522},
    //     {-0.6255},
    //     {-0.7011},
    //     {-0.7833},
    //     {-0.8678},
    //     {-0.9582},
    //     {-1.0524},
    //     {-1.1493},
    //     {-1.2505},
    //     {-1.3521},
    //     {-1.4594},
    //     {-1.5655},
    //     {-1.6758},
    //     {-1.7859},
    //     {-1.8985},
    //     {-2.0117},
    //     {-2.1269},
    //     {-2.2422},
    //     {-2.3594},
    //     {-2.4776},
    //     {-2.5971},
    //     {-2.7182},
    //     {-2.8407},
    //     {-2.9652},
    //     {-3.0917},
    //     {-3.2205},
    //     {-3.3456},
    //     {-3.4033},
    //     {-3.4383},
    //     {-3.4688},
    //     {-3.4958},
    //     {-3.52},
    //     {-3.5404},
    //     {-3.559},
    //     {-3.5735},
    //     {-3.5865},
    //     {-3.595},
    //     {-3.6012},
    //     {-3.6055},
    //     {-3.6044},
    //     {-3.6023},
    //     {-3.5943},
    //     {-3.5851},
    //     {-3.571},
    //     {-3.5524},
    //     {-3.5337},
    //     {-3.5177},
    //     {-3.5017},
    //     {-3.4893},
    //     {-3.4804},
    //     {-3.4697},
    //     {-3.4629},
    //     {-3.4566},
    //     {-3.4522},
    //     {-3.448},
    //     {-3.4457},
    //     {-3.4423},
    //     {-3.4426},
    //     {-3.4407},
    //     {-3.4425},
    //     {-3.443},
    //     {-3.4442},
    //     {-3.448},
    //     {-3.4496},
    //     {-3.4548},
    //     {-3.4589},
    //     {-3.4636},
    //     {-3.4723},
    //     {-3.4767},
    //     {-3.4871},
    //     {-3.4945},
    //     {-3.5059},
    //     {-3.5154},
    //     {-3.53},
    //     {-3.5429},
    //     {-3.5572},
    //     {-3.5747},
    //     {-3.5918},
    //     {-3.6104},
    //     {-3.6333},
    //     {-3.6543},
    //     {-3.6797},
    //     {-3.7043},
    //     {-3.7306},
    //     {-3.7527},
    //     {-3.7774},
    //     {-3.7992},
    //     {-3.8028},
    //     {-3.7612},
    //     {-3.8226},
    //     {-3.8943},
    //     {-3.9168},
    //     {-3.9061},
    //     {-3.8935},
    //     {-3.8809},
    //     {-3.8681},
    //     {-3.857},
    //     {-3.8458},
    //     {-3.8344},
    //     {-3.8248},
    //     {-3.815},
    //     {-3.805},
    //     {-3.7961},
    //     {-3.7882},
    //     {-3.7795},
    //     {-3.7718},
    //     {-3.7652},
    //     {-3.7577},
    //     {-3.7518},
    //     {-3.7445},
    //     {-3.74},
    //     {-3.734},
    //     {-3.7291},
    //     {-3.7244},
    //     {-3.7201},
    //     {-3.7162},
    //     {-3.7126},
    //     {-3.7093},
    //     {-3.7063},
    //     {-3.7036},
    //     {-3.7013},
    //     {-3.6992},
    //     {-3.6968},
    //     {-3.6966},
    //     {-3.6941},
    //     {-3.6932},
    //     {-3.6939},
    //     {-3.6922},
    //     {-3.6927},
    //     {-3.6928},
    //     {-3.6925},
    //     {-3.6938},
    //     {-3.694},
    //     {-3.6964},
    //     {-3.6958},
    //     {-3.6993},
    //     {-3.6998},
    //     {-3.7018},
    //     {-3.7052},
    //     {-3.7057},
    //     {-3.7102},
    //     {-3.7117},
    //     {-3.7154},
    //     {-3.7179},
    //     {-3.7219},
    //     {-3.7248},
    //     {-3.7291},
    //     {-3.733},
    //     {-3.737},
    //     {-3.7406},
    //     {-3.7456},
    //     {-3.7501},
    //     {-3.7547},
    //     {-3.7589},
    //     {-3.7644},
    //     {-3.7701},
    //     {-3.774},
    //     {-3.7799},
    //     {-3.7853},
    //     {-3.7908},
    //     {-3.7965},
    //     {-3.8022},
    //     {-3.808},
    //     {-3.8145},
    //     {-3.82},
    //     {-3.8261},
    //     {-3.8323},
    //     {-3.8391},
    //     {-3.8449},
    //     {-3.8513},
    //     {-3.8583},
    //     {-3.8649},
    //     {-3.8709},
    //     {-3.8782},
    //     {-3.873},
    //     {-3.8199},
    //     {-3.7533},
    //     {-3.6871},
    //     {-3.6212},
    //     {-3.5562},
    //     {-3.4899},
    //     {-3.4261},
    //     {-3.3605},
    //     {-3.2968},
    //     {-3.2324},
    //     {-3.1692},
    //     {-3.1054},
    //     {-3.0422},
    //     {-2.9794},
    //     {-2.9168},
    //     {-2.855},
    //     {-2.7919},
    //     {-2.7299},
    //     {-2.6688},
    //     {-2.6073},
    //     {-2.5456},
    //     {-2.4851},
    //     {-2.4232},
    //     {-2.3636},
    //     {-2.3027},
    //     {-2.2418},
    //     {-2.1827},
    //     {-2.1218},
    //     {-2.0625},
    //     {-2.0023},
    //     {-1.9433},
    //     {-1.8834},
    //     {-1.8247},
    //     {-1.7651},
    //     {-1.7062},
    //     {-1.6473},
    //     {-1.5885},
    //     {-1.5299},
    //     {-1.4713},
    //     {-1.4135},
    //     {-1.3536},
    //     {-1.2969},
    //     {-1.2378},
    //     {-1.1802},
    //     {-1.1223},
    //     {-1.064},
    //     {-1.0061},
    //     {-0.9487},
    //     {-0.8911},
    //     {-0.8331},
    //     {-0.7755},
    //     {-0.7178},
    //     {-0.6608},
    //     {-0.6029},
    //     {-0.5462},
    //     {-0.4877},
    //     {-0.4314},
    //     {-0.3736},
    //     {-0.3163},
    //     {-0.2588},
    //     {-0.2023},
    //     {-0.1436},
    //     {-0.087}
    // }
    // ;
    // std::vector<std::vector<double>> pathRightR = {
    //     {0},
    //     {-0.0331},
    //     {-0.0876},
    //     {-0.1492},
    //     {-0.2133},
    //     {-0.2761},
    //     {-0.3386},
    //     {-0.4028},
    //     {-0.4658},
    //     {-0.5301},
    //     {-0.595},
    //     {-0.6603},
    //     {-0.7266},
    //     {-0.7906},
    //     {-0.86},
    //     {-0.9258},
    //     {-0.9942},
    //     {-1.0635},
    //     {-1.133},
    //     {-1.2058},
    //     {-1.2756},
    //     {-1.35},
    //     {-1.4249},
    //     {-1.5009},
    //     {-1.5768},
    //     {-1.6569},
    //     {-1.737},
    //     {-1.8198},
    //     {-1.9037},
    //     {-1.9915},
    //     {-2.0777},
    //     {-2.171},
    //     {-2.2629},
    //     {-2.3593},
    //     {-2.4574},
    //     {-2.5592},
    //     {-2.6627},
    //     {-2.769},
    //     {-2.8801},
    //     {-2.9905},
    //     {-3.1045},
    //     {-3.2228},
    //     {-3.3322},
    //     {-3.3727},
    //     {-3.3752},
    //     {-3.3727},
    //     {-3.372},
    //     {-3.3718},
    //     {-3.3709},
    //     {-3.3717},
    //     {-3.3727},
    //     {-3.3729},
    //     {-3.3733},
    //     {-3.3763},
    //     {-3.376},
    //     {-3.3784},
    //     {-3.3799},
    //     {-3.383},
    //     {-3.3866},
    //     {-3.3886},
    //     {-3.3936},
    //     {-3.3985},
    //     {-3.4047},
    //     {-3.4123},
    //     {-3.4218},
    //     {-3.4342},
    //     {-3.4462},
    //     {-3.4604},
    //     {-3.4682},
    //     {-3.4737},
    //     {-3.4733},
    //     {-3.4691},
    //     {-3.4621},
    //     {-3.4509},
    //     {-3.4393},
    //     {-3.422},
    //     {-3.4059},
    //     {-3.3856},
    //     {-3.3656},
    //     {-3.3429},
    //     {-3.3197},
    //     {-3.2944},
    //     {-3.2692},
    //     {-3.242},
    //     {-3.2138},
    //     {-3.1843},
    //     {-3.1532},
    //     {-3.1207},
    //     {-3.0862},
    //     {-3.0497},
    //     {-3.0109},
    //     {-2.9634},
    //     {-2.8511},
    //     {-2.7261},
    //     {-2.6057},
    //     {-2.4887},
    //     {-2.3744},
    //     {-2.264},
    //     {-2.1554},
    //     {-2.0509},
    //     {-1.9479},
    //     {-1.8495},
    //     {-1.7532},
    //     {-1.6589},
    //     {-1.57},
    //     {-1.4821},
    //     {-1.4001},
    //     {-1.3193},
    //     {-1.2434},
    //     {-1.1723},
    //     {-1.1054},
    //     {-1.0445},
    //     {-0.9916},
    //     {-0.9424},
    //     {-0.8966},
    //     {-0.859},
    //     {-0.8234},
    //     {-0.7932},
    //     {-0.7664},
    //     {-0.7447},
    //     {-0.7261},
    //     {-0.7134},
    //     {-0.7018},
    //     {-0.6969},
    //     {-0.6928},
    //     {-0.6943},
    //     {-0.6995},
    //     {-0.7061},
    //     {-0.7193},
    //     {-0.7328},
    //     {-0.7517},
    //     {-0.7738},
    //     {-0.7961},
    //     {-0.8265},
    //     {-0.855},
    //     {-0.8905},
    //     {-0.9259},
    //     {-0.9671},
    //     {-1.0072},
    //     {-1.0529},
    //     {-1.1013},
    //     {-1.1504},
    //     {-1.2039},
    //     {-1.2599},
    //     {-1.3156},
    //     {-1.3773},
    //     {-1.4387},
    //     {-1.5038},
    //     {-1.5675},
    //     {-1.6353},
    //     {-1.7006},
    //     {-1.7689},
    //     {-1.8552},
    //     {-1.9868},
    //     {-2.0154},
    //     {-2.032},
    //     {-2.0135},
    //     {-1.9835},
    //     {-1.9565},
    //     {-1.9309},
    //     {-1.9066},
    //     {-1.8819},
    //     {-1.8585},
    //     {-1.8365},
    //     {-1.8139},
    //     {-1.7928},
    //     {-1.7731},
    //     {-1.7534},
    //     {-1.7339},
    //     {-1.7165},
    //     {-1.6991},
    //     {-1.6819},
    //     {-1.6667},
    //     {-1.651},
    //     {-1.638},
    //     {-1.6232},
    //     {-1.6111},
    //     {-1.599},
    //     {-1.5878},
    //     {-1.5773},
    //     {-1.5675},
    //     {-1.5585},
    //     {-1.5502},
    //     {-1.5426},
    //     {-1.5358},
    //     {-1.5297},
    //     {-1.5243},
    //     {-1.5202},
    //     {-1.5149},
    //     {-1.5129},
    //     {-1.5103},
    //     {-1.507},
    //     {-1.507},
    //     {-1.5057},
    //     {-1.5056},
    //     {-1.5069},
    //     {-1.5074},
    //     {-1.5098},
    //     {-1.5109},
    //     {-1.5158},
    //     {-1.5173},
    //     {-1.5226},
    //     {-1.5272},
    //     {-1.531},
    //     {-1.5384},
    //     {-1.5425},
    //     {-1.5503},
    //     {-1.5566},
    //     {-1.5646},
    //     {-1.5718},
    //     {-1.5806},
    //     {-1.5885},
    //     {-1.5975},
    //     {-1.6068},
    //     {-1.617},
    //     {-1.6263},
    //     {-1.6366},
    //     {-1.6471},
    //     {-1.6585},
    //     {-1.669},
    //     {-1.6797},
    //     {-1.6924},
    //     {-1.7036},
    //     {-1.7155},
    //     {-1.7277},
    //     {-1.74},
    //     {-1.7525},
    //     {-1.7651},
    //     {-1.7773},
    //     {-1.7908},
    //     {-1.8038},
    //     {-1.8169},
    //     {-1.8296},
    //     {-1.8434},
    //     {-1.8569},
    //     {-1.8698},
    //     {-1.8833},
    //     {-1.8975},
    //     {-1.9106},
    //     {-1.9168},
    //     {-1.889},
    //     {-1.8656},
    //     {-1.8419},
    //     {-1.8177},
    //     {-1.7927},
    //     {-1.769},
    //     {-1.7428},
    //     {-1.7184},
    //     {-1.6921},
    //     {-1.6666},
    //     {-1.6397},
    //     {-1.6137},
    //     {-1.5868},
    //     {-1.5596},
    //     {-1.5322},
    //     {-1.504},
    //     {-1.4771},
    //     {-1.449},
    //     {-1.4201},
    //     {-1.3915},
    //     {-1.3633},
    //     {-1.3338},
    //     {-1.3057},
    //     {-1.2753},
    //     {-1.2463},
    //     {-1.2171},
    //     {-1.1862},
    //     {-1.1572},
    //     {-1.1265},
    //     {-1.0967},
    //     {-1.0656},
    //     {-1.0355},
    //     {-1.0042},
    //     {-0.9738},
    //     {-0.9428},
    //     {-0.9117},
    //     {-0.8804},
    //     {-0.849},
    //     {-0.8175},
    //     {-0.7854},
    //     {-0.7552},
    //     {-0.7219},
    //     {-0.691},
    //     {-0.6585},
    //     {-0.6265},
    //     {-0.595},
    //     {-0.5627},
    //     {-0.5299},
    //     {-0.4976},
    //     {-0.4658},
    //     {-0.4333},
    //     {-0.4007},
    //     {-0.3676},
    //     {-0.3355},
    //     {-0.3024},
    //     {-0.2708},
    //     {-0.237},
    //     {-0.2048},
    //     {-0.172},
    //     {-0.1391},
    //     {-0.1057},
    //     {-0.074},
    //     {-0.0396}
    // }
    // ;

    // std::vector<std::vector<double>> fwdLeft = {
    //     {0},
    //     {0.0284},
    //     {0.0762},
    //     {0.1256},
    //     {0.1755},
    //     {0.2255},
    //     {0.2754},
    //     {0.3252},
    //     {0.3752},
    //     {0.4252},
    //     {0.4752},
    //     {0.5252},
    //     {0.5751},
    //     {0.6251},
    //     {0.675},
    //     {0.7251},
    //     {0.7751},
    //     {0.8251},
    //     {0.8751},
    //     {0.9251},
    //     {0.9751},
    //     {1.0251},
    //     {1.0751},
    //     {1.1251},
    //     {1.175},
    //     {1.225},
    //     {1.275},
    //     {1.325},
    //     {1.375},
    //     {1.425},
    //     {1.475},
    //     {1.525},
    //     {1.575},
    //     {1.625},
    //     {1.675},
    //     {1.725},
    //     {1.775},
    //     {1.825},
    //     {1.875},
    //     {1.925},
    //     {1.975},
    //     {2.025},
    //     {2.075},
    //     {2.125},
    //     {2.175},
    //     {2.2211},
    //     {2.197},
    //     {2.147},
    //     {2.097},
    //     {2.047},
    //     {1.997},
    //     {1.947},
    //     {1.897},
    //     {1.847},
    //     {1.797},
    //     {1.747},
    //     {1.697},
    //     {1.647},
    //     {1.597},
    //     {1.547},
    //     {1.4969},
    //     {1.4469},
    //     {1.3969},
    //     {1.3469},
    //     {1.2969},
    //     {1.2469},
    //     {1.1969},
    //     {1.1469},
    //     {1.0969},
    //     {1.0469},
    //     {0.9969},
    //     {0.9469},
    //     {0.8969},
    //     {0.8469},
    //     {0.7969},
    //     {0.7468},
    //     {0.6968},
    //     {0.6469},
    //     {0.5969},
    //     {0.5469},
    //     {0.4968},
    //     {0.4467},
    //     {0.3967},
    //     {0.3467},
    //     {0.2966},
    //     {0.2465},
    //     {0.1966},
    //     {0.1466},
    //     {0.0964},
    //     {0.0437}
    // }
    // ;
    // std::vector<std::vector<double>> fwdRight = {
    //     {0},
    //     {0.0284},
    //     {0.0762},
    //     {0.1256},
    //     {0.1755},
    //     {0.2255},
    //     {0.2754},
    //     {0.3252},
    //     {0.3752},
    //     {0.4252},
    //     {0.4752},
    //     {0.5252},
    //     {0.5751},
    //     {0.6251},
    //     {0.675},
    //     {0.7251},
    //     {0.7751},
    //     {0.8251},
    //     {0.8751},
    //     {0.9251},
    //     {0.9751},
    //     {1.0251},
    //     {1.0751},
    //     {1.1251},
    //     {1.175},
    //     {1.225},
    //     {1.275},
    //     {1.325},
    //     {1.375},
    //     {1.425},
    //     {1.475},
    //     {1.525},
    //     {1.575},
    //     {1.625},
    //     {1.675},
    //     {1.725},
    //     {1.775},
    //     {1.825},
    //     {1.875},
    //     {1.925},
    //     {1.975},
    //     {2.025},
    //     {2.075},
    //     {2.125},
    //     {2.175},
    //     {2.2211},
    //     {2.197},
    //     {2.147},
    //     {2.097},
    //     {2.047},
    //     {1.997},
    //     {1.947},
    //     {1.897},
    //     {1.847},
    //     {1.797},
    //     {1.747},
    //     {1.697},
    //     {1.647},
    //     {1.597},
    //     {1.547},
    //     {1.4969},
    //     {1.4469},
    //     {1.3969},
    //     {1.3469},
    //     {1.2969},
    //     {1.2469},
    //     {1.1969},
    //     {1.1469},
    //     {1.0969},
    //     {1.0469},
    //     {0.9969},
    //     {0.9469},
    //     {0.8969},
    //     {0.8469},
    //     {0.7969},
    //     {0.7468},
    //     {0.6968},
    //     {0.6469},
    //     {0.5969},
    //     {0.5469},
    //     {0.4968},
    //     {0.4467},
    //     {0.3967},
    //     {0.3467},
    //     {0.2966},
    //     {0.2465},
    //     {0.1966},
    //     {0.1466},
    //     {0.0964},
    //     {0.0437}
    // }
    // ;

    std::vector<std::vector<double>> fwdRLeft = {
        {0},
        {-0.0284},
        {-0.0762},
        {-0.1256},
        {-0.1755},
        {-0.2255},
        {-0.2754},
        {-0.3252},
        {-0.3752},
        {-0.4252},
        {-0.4752},
        {-0.5252},
        {-0.5751},
        {-0.6251},
        {-0.675},
        {-0.7251},
        {-0.7751},
        {-0.8251},
        {-0.8751},
        {-0.9251},
        {-0.9751},
        {-1.0251},
        {-1.0751},
        {-1.1251},
        {-1.175},
        {-1.225},
        {-1.275},
        {-1.325},
        {-1.375},
        {-1.425},
        {-1.475},
        {-1.525},
        {-1.575},
        {-1.625},
        {-1.675},
        {-1.725},
        {-1.775},
        {-1.825},
        {-1.875},
        {-1.925},
        {-1.975},
        {-2.025},
        {-2.075},
        {-2.125},
        {-2.175},
        {-2.2211},
        {-2.197},
        {-2.147},
        {-2.097},
        {-2.047},
        {-1.997},
        {-1.947},
        {-1.897},
        {-1.847},
        {-1.797},
        {-1.747},
        {-1.697},
        {-1.647},
        {-1.597},
        {-1.547},
        {-1.4969},
        {-1.4469},
        {-1.3969},
        {-1.3469},
        {-1.2969},
        {-1.2469},
        {-1.1969},
        {-1.1469},
        {-1.0969},
        {-1.0469},
        {-0.9969},
        {-0.9469},
        {-0.8969},
        {-0.8469},
        {-0.7969},
        {-0.7468},
        {-0.6968},
        {-0.6469},
        {-0.5969},
        {-0.5469},
        {-0.4968},
        {-0.4467},
        {-0.3967},
        {-0.3467},
        {-0.2966},
        {-0.2465},
        {-0.1966},
        {-0.1466},
        {-0.0964},
        {-0.0437}
    }
    ;
    std::vector<std::vector<double>> fwdRRight = {
        {0},
        {-0.0284},
        {-0.0762},
        {-0.1256},
        {-0.1755},
        {-0.2255},
        {-0.2754},
        {-0.3252},
        {-0.3752},
        {-0.4252},
        {-0.4752},
        {-0.5252},
        {-0.5751},
        {-0.6251},
        {-0.675},
        {-0.7251},
        {-0.7751},
        {-0.8251},
        {-0.8751},
        {-0.9251},
        {-0.9751},
        {-1.0251},
        {-1.0751},
        {-1.1251},
        {-1.175},
        {-1.225},
        {-1.275},
        {-1.325},
        {-1.375},
        {-1.425},
        {-1.475},
        {-1.525},
        {-1.575},
        {-1.625},
        {-1.675},
        {-1.725},
        {-1.775},
        {-1.825},
        {-1.875},
        {-1.925},
        {-1.975},
        {-2.025},
        {-2.075},
        {-2.125},
        {-2.175},
        {-2.2211},
        {-2.197},
        {-2.147},
        {-2.097},
        {-2.047},
        {-1.997},
        {-1.947},
        {-1.897},
        {-1.847},
        {-1.797},
        {-1.747},
        {-1.697},
        {-1.647},
        {-1.597},
        {-1.547},
        {-1.4969},
        {-1.4469},
        {-1.3969},
        {-1.3469},
        {-1.2969},
        {-1.2469},
        {-1.1969},
        {-1.1469},
        {-1.0969},
        {-1.0469},
        {-0.9969},
        {-0.9469},
        {-0.8969},
        {-0.8469},
        {-0.7969},
        {-0.7468},
        {-0.6968},
        {-0.6469},
        {-0.5969},
        {-0.5469},
        {-0.4968},
        {-0.4467},
        {-0.3967},
        {-0.3467},
        {-0.2966},
        {-0.2465},
        {-0.1966},
        {-0.1466},
        {-0.0964},
        {-0.0437}
    }
    ;

    // while(!master.getDigital(ControllerDigital::A)) pros::delay(10);
    
    //----------------------------------------------------------------------//
    /*followPath(pathLeft, pathRight);
    
    claw.set_value(true);
    mogo.set_value(true);
    pros::delay(250);

    lift.move_relative(360, 200);

    followPath(pathLeftR, pathRightR);

    mogo.set_value(false);

    followPath(fwdLeft, fwdRight);

    pros::lcd::set_text(2, "done");*/
    //---------------------------------------------------------------------------------//
    mogo.set_value(true);
    followPath(fwdRLeft, fwdRRight);
    mogo.set_value(false);
    followPath(loopbackLeft, loopbackRight);
    claw.set_value(true);
    rightDrive.moveRelative(1000, 600);
}

void opcontrol(){
    // Configures brake type for drive & lift
    leftDrive.setBrakeMode(AbstractMotor::brakeMode::coast);
    rightDrive.setBrakeMode(AbstractMotor::brakeMode::coast);
    lift.set_brake_mode(pros::motor_brake_mode_e::E_MOTOR_BRAKE_BRAKE);

    // Initializes driver control variable
    double liftPosition = 0.0;
    bool mogoState = false, prevBtnState = false, currentBtnState = false;
    
    // Initializes logo on the brain screen
    // Gif gif("/usd/logo.gif", lv_scr_act()); // TODO - Make Gif Run in opcontrol

    while(true){
        /** 
         * @brief Chassis Control
         * Left Analog Y Stick -> Linear velocity the chassis drives in
         * Right Analog X Stick -> Curvature the chassis drives in
         */
	    double power = master.getAnalog(ControllerAnalog::leftY) * (abs(master.getAnalog(ControllerAnalog::leftY)) >= DEADBAND);
        double curvature = master.getAnalog(ControllerAnalog::rightX) * (abs(master.getAnalog(ControllerAnalog::rightX)) >= DEADBAND);
        auto speed = curvatureDrive(power, curvature, power == 0);
		(chassis->getModel())->tank(speed.first, speed.second);

        /**
         * @brief Lift Control
         * L1 (Left Top) Pressed -> Lift goes up
         * L2 (Left Bottom) Pressed -> Lift goes down
         * Both are pressed / both aren't pressed -> lift stays in the current position
         */
        // lift.moveVoltage((master.getDigital(ControllerDigital::L1) - master.getDigital(ControllerDigital::L2)) * 12000);
        if(master.getDigital(ControllerDigital::L1)) lift.move_voltage(12000);
        else if(master.getDigital(ControllerDigital::L2)) lift.move_voltage(-12000);
        else lift.move_voltage(0);

        /**
         * @brief Claw Control
         * R1 (Right Top) Pressed -> claw closes
         * R1 (Right Top) not pressed -> claw opens
         */
        claw.set_value(master.getDigital(ControllerDigital::R1));

        /**
         * @brief Mogo Holder Control
         * The solenoid toggles between the two states every time R2 (Right Bottom) is pressed
         */
        currentBtnState = master.getDigital(ControllerDigital::R2);
        if(currentBtnState && !prevBtnState){
            mogo.set_value((mogoState = !mogoState));
        }
        prevBtnState = currentBtnState;

        pros::delay(10);
    }
}